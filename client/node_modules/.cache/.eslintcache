[{"C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\index.js":"1","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\App.js":"2","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Navbar\\Navbar.js":"3","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Sprints\\Sprints.js":"4","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Employees\\Employee.js":"5","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Dashboard\\Dashboard.js":"6","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Devs\\Devs.js":"7","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Forms\\FormEmployeeData.js":"8","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Navbar\\SidebarData.js":"9","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Forms\\FormSprints.js":"10","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Forms\\Form.js":"11","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\DropWrapper\\DropWrapper.js":"12","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Col\\SprintsCol.js":"13","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Item\\Item.js":"14","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\data\\index.js":"15","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Cards\\Cards.js":"16","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Dashboard\\DashTable\\Table.js":"17","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\DevInfo\\DevInfo.js":"18","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Charts\\PieChart.js":"19","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Table\\index.js":"20","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\data\\types.js":"21","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\TableRow\\index.js":"22","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Col\\Col.js":"23","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Row\\Row.js":"24","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Container\\Container.js":"25"},{"size":282,"mtime":1618080232691,"results":"26","hashOfConfig":"27"},{"size":938,"mtime":1618536424940,"results":"28","hashOfConfig":"27"},{"size":1759,"mtime":1618074856707,"results":"29","hashOfConfig":"27"},{"size":2965,"mtime":1618960267906,"results":"30","hashOfConfig":"27"},{"size":784,"mtime":1618962357356,"results":"31","hashOfConfig":"27"},{"size":6960,"mtime":1618960267826,"results":"32","hashOfConfig":"27"},{"size":1406,"mtime":1618960267916,"results":"33","hashOfConfig":"27"},{"size":235,"mtime":1618527799547,"results":"34","hashOfConfig":"27"},{"size":815,"mtime":1618074856708,"results":"35","hashOfConfig":"27"},{"size":11175,"mtime":1618960267910,"results":"36","hashOfConfig":"27"},{"size":2307,"mtime":1618962414327,"results":"37","hashOfConfig":"27"},{"size":949,"mtime":1618226757654,"results":"38","hashOfConfig":"27"},{"size":277,"mtime":1618226757653,"results":"39","hashOfConfig":"27"},{"size":2319,"mtime":1618524724503,"results":"40","hashOfConfig":"27"},{"size":931,"mtime":1618226757658,"results":"41","hashOfConfig":"27"},{"size":418,"mtime":1618080232673,"results":"42","hashOfConfig":"27"},{"size":1347,"mtime":1618535939387,"results":"43","hashOfConfig":"27"},{"size":647,"mtime":1618960267918,"results":"44","hashOfConfig":"27"},{"size":1853,"mtime":1618328431484,"results":"45","hashOfConfig":"27"},{"size":1264,"mtime":1618960267903,"results":"46","hashOfConfig":"27"},{"size":97,"mtime":1618524724505,"results":"47","hashOfConfig":"27"},{"size":792,"mtime":1618960267901,"results":"48","hashOfConfig":"27"},{"size":271,"mtime":1618960267922,"results":"49","hashOfConfig":"27"},{"size":162,"mtime":1618960267823,"results":"50","hashOfConfig":"27"},{"size":189,"mtime":1618960267921,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"dpmuyf",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\index.js",[],["114","115"],"C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\App.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Sprints\\Sprints.js",["116","117"],"\r\nimport SprintsForms from '../Forms/FormSprints'\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Item from \"../Item/Item\";\r\nimport DropWrapper from \"../DropWrapper/DropWrapper\";\r\nimport SprintsCol from \"../Col/SprintsCol\";\r\nimport { data, statuses } from \"../../data/index\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\n\r\nconst Sprints = () => {\r\n\r\n    const [items, setItems] = useState();\r\n\r\n    const onDrop = (item, monitor, status) => {\r\n        const mapping = statuses.find(si => si.status === status);\r\n\r\n        setItems(prevState => {\r\n            const newItems = prevState\r\n                .filter(i => i.id !== item.id)\r\n                .concat({ ...item, status, icon: mapping.icon });\r\n            return [...newItems];\r\n        });\r\n    };\r\n\r\n    const moveItem = (dragIndex, hoverIndex) => {\r\n        const item = items[dragIndex];\r\n        setItems(prevState => {\r\n            const newItems = prevState.filter((i, idx) => idx !== dragIndex);\r\n            newItems.splice(hoverIndex, 0, item);\r\n            return [...newItems];\r\n        });\r\n    };\r\n\r\n    const getSprints = () => {\r\n\r\n        axios.get(\"http://localhost:5000/projects\")\r\n            .then(sprints => {\r\n                console.log(sprints.data)\r\n\r\n                const results = sprints.data.map(sprint => {\r\n                    return {\r\n                        id: sprint._id,\r\n                        // icon: \"⭕️\",\r\n                        status: sprint.status,\r\n                        title: sprint.title,\r\n                        content: sprint.description\r\n                    }\r\n                })\r\n                console.log(results)\r\n                setItems(results)\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n        console.log(items)\r\n    }\r\n\r\n    useEffect(getSprints, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='sprints'>\r\n            <SprintsForms getSprints={getSprints} />\r\n            <div className={\"row\"}>\r\n                {statuses.map(s => {\r\n                    return (\r\n                        <div key={s.status} className={\"col-wrapper\"}>\r\n                            <h2 className={\"col-header\"}>{s.status.toUpperCase()}</h2>\r\n                            <DropWrapper onDrop={onDrop} status={s.status}>\r\n                                <SprintsCol>\r\n                                    {items ? items\r\n                                        .filter(i => i.status === s.status)\r\n                                        .map((i, idx) => <Item key={i.id} item={i} index={idx} moveItem={moveItem} status={s} />)\r\n                                        : null\r\n                                    }\r\n                                </SprintsCol>\r\n                            </DropWrapper>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Sprints;","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Employees\\Employee.js",["118","119"],"import React, {useState} from 'react';\r\nimport TableComponents from \"../Table\"\r\nimport {FormEmployeeData} from '../Forms/FormEmployeeData.js'\r\nimport Forms from '../Forms/Form'\r\nimport {Col, Row, Container} from \"react-bootstrap\";\r\n\r\nfunction Employee() {   \r\n    const [employees, setEmployees] = useState([]);\r\n\r\n    return (\r\n        <Container>\r\n        <Row>\r\n        <div className='employee'>\r\n            <h1>Employee Page</h1>\r\n            <TableComponents\r\n                employees={employees}\r\n                setEmployees={setEmployees}\r\n            />\r\n                    <Forms \r\n                    setEmployees={setEmployees}\r\n                        \r\n                    />\r\n        </div>\r\n        </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Employee","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Dashboard\\Dashboard.js",["120","121","122","123","124","125","126"],"import React, { useState, useEffect } from 'react';\r\n// import Card from \"../Cards/Cards\"\r\nimport CustomPieChart from \"../Charts/PieChart\";\r\nimport \"./dashboard.css\";\r\nimport Container from \"../Container/Container\";\r\nimport Row from \"../Row/Row\";\r\nimport Col from \"../Col/Col\";\r\nimport {Form, Button, Card} from 'react-bootstrap/';\r\nimport axios from \"axios\";\r\n\r\nfunction Dashboard() {\r\n\r\n// Card data state to have title of project, project description, use data to map over and display on the screen.\r\n\r\n    const [cardData, setCardData] = useState([])\r\n       \r\n    const [sprintTitles, setSprintTitles] = useState([]);\r\n\r\n    const [results, setResults] = useState([]);\r\n\r\n    const [id, setId] = useState();\r\n\r\n    const runAxios = () => {\r\n        axios.get(`http://localhost:5000/projects/${id}`).then(\r\n            sprints => {\r\n                console.log(sprints);\r\n                \r\n            }\r\n        ).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            axios.get(\"http://localhost:5000/projects/\").then(\r\n                sprints => {\r\n                    console.log(sprints.data[0]._id);\r\n                    setResults(sprints.data);\r\n                }\r\n            ).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        const {name, value} = e.target;\r\n        console.log(e.target.value);\r\n        setId(e.target.value);\r\n    }\r\n\r\n\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        axios.get(`http://localhost:5000/projects/${id}`).then(\r\n                sprints => {\r\n                    console.log(sprints.data);\r\n                    console.log(sprints.data.description);\r\n                    setCardData(sprints.data)\r\n                }\r\n            ).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className='dashboard'>\r\n            <h1>Dashboard Page</h1>\r\n            <Row>\r\n                <Col size=\"2\">\r\n                    <Form id={id}> \r\n                        <Form.Group>\r\n                            <Form.Label>Your Projects</Form.Label>\r\n                            <Form.Control size=\"md\" as=\"select\" multiple name=\"id\" onChange={handleChange} onClick={handleClick}  >\r\n                            { results.map(sprints => {\r\n                                return <option value={sprints._id} key={sprints._id}>{sprints.title} </option>\r\n                                })}\r\n                            </Form.Control> \r\n                            {/* <button class=\"btn-primary\" onClick={()=>  console.log(cardData)}>Display {cardData.title}</button> */}\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Col>\r\n                <Col size=\"2\">\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>Project: {cardData.title}</Card.Title>\r\n                        <Card.Text>\r\n                        {cardData.description}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                </Col>\r\n                <Col size=\"2\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>Employees</Card.Title>\r\n                            <Card.Text>\r\n                            {cardData.employee}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col size=\"2\">\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>Managers</Card.Title>\r\n                        <Card.Text>\r\n                        {cardData.manager}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                </Col>\r\n                <Col size=\"2\">\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>Deadline</Card.Title>\r\n                        <Card.Text>\r\n                        {cardData.endDate}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                </Col>\r\n                {/* <Col size=\"2\">\r\n                    <div>\r\n\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>Project: {cardData.title}</Card.Title>\r\n                        <Card.Text>\r\n                        {cardData.description}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>Employees</Card.Title>\r\n                        <Card.Text>\r\n                        {cardData.employee}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>Managers</Card.Title>\r\n                        <Card.Text>\r\n                        {cardData.manager}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n                   </div>\r\n                </Col> */}\r\n            </Row>\r\n           \r\n            <br />\r\n\r\n            <div className=\"main__title\">\r\n\r\n                <div className=\"main__greeting mx-auto\">\r\n                    <br />\r\n                    <h1>Welcome to your admin dashboard</h1>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"charts\">\r\n                <div className=\"charts__left\">\r\n                    <div className=\"charts__left__title\" />\r\n                    <CustomPieChart />\r\n                </div>\r\n\r\n                <div className=\"charts__right\">\r\n                    <div className=\"charts__right__title\">\r\n                        <div>\r\n                            <h1>Status Reports</h1>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"charts__right__cards\">\r\n                        <div className=\"card1\">\r\n                            <h1>Open</h1>\r\n                            <h3>5</h3>\r\n                        </div>\r\n\r\n                        <div className=\"card2\">\r\n                            <h1>In progress</h1>\r\n                            <h3>7</h3>\r\n                        </div>\r\n\r\n                        <div className=\"card3\">\r\n                            <h1>In review</h1>\r\n                            <h3>3</h3>\r\n                        </div>\r\n\r\n                        <div className=\"card4\">\r\n                            <h1>Done</h1>\r\n                            <h3>5</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Devs\\Devs.js",["127","128"],"import React from 'react'\r\nimport {  Row, Col, Card, Image, Container } from \"react-bootstrap\";\r\nimport DevInfo from '../DevInfo/DevInfo'\r\n\r\n\r\nfunction Devs() {\r\n    return (\r\n<Container>\r\n        <div className='devs'>\r\n           <Card className=\"my-5 px-5 pb-1 text-center\">\r\n      <Card.Body>\r\n        <h2 className=\"h1-responsive font-weight-bold my-5\">\r\n          Our amazing team\r\n        </h2>\r\n        <p className=\"grey-text w-responsive mx-auto mb-5 text-center\">\r\n         Meet the Devs\r\n        </p>\r\n        <Row className=\"text-md-left\">\r\n          <DevInfo \r\nimg=\"https://avatars.githubusercontent.com/u/71408758?v=4\"\r\n              name=\"Johnnie Simpson\"\r\n              techs=\"MongoDB,HTML,Javscipt\"\r\n          />\r\n          <DevInfo \r\n              img=\"https://avatars.githubusercontent.com/u/69173896?v=4\"\r\n              name=\"Amir Ashtiany\"\r\n              techs=\"MongoDB,HTML,Javscipt\"\r\n          />\r\n          <DevInfo \r\n          img= \"https://avatars.githubusercontent.com/u/71423804?v=4\"\r\n              name=\"Lu Hao\"\r\n              techs=\"MongoDB,HTML,Javscipt\"\r\n          />\r\n          <DevInfo \r\n          img=\"https://avatars.githubusercontent.com/u/46572141?v=4\"\r\n              name=\"Mengyue Zhang\"\r\n              techs=\"MongoDB,HTML,Javscipt\"\r\n          />\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n        </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Devs","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Forms\\FormEmployeeData.js",["129"],"import React from 'react'\r\n\r\nexport const FormEmployeeData = [\r\n    {\r\n        first: 'First Name',\r\n        last: 'Last Name',\r\n        title: 'Select Title',\r\n        email: 'Email',\r\n        passord: 'Default Password'\r\n    }\r\n]\r\n\r\n","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Navbar\\SidebarData.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Forms\\FormSprints.js",["130","131","132","133","134","135"],"import React, { useState, useEffect, Component } from \"react\";\r\nimport { Form, Button, Col, Container, h1, InputGroup, Row } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\n\r\nconst SprintsForms = (props) => {\r\n\r\n\r\n\r\n    // export default class SprintsForms extends Component {\r\n\r\n    // this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    // this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    // this.onChangeStartDate = this.onChangeStartDate.bind(this);\r\n    // this.onChangeManager = this.onChangeManager.bind(this);\r\n    // this.onChangeEmployee = this.onChangeEmployee.bind(this);\r\n    // this.onChangeStatus = this.onChangeStatus.bind(this);\r\n    // this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [startDate, setstartDate] = useState(new Date());\r\n    const [manager, setManager] = useState([]);\r\n    const [employee, setEmployee] = useState([]);\r\n    const [status, setStatus] = useState(['open', 'in progress', \"in review\", \"done\"]);\r\n    const [employeeData, setEmployeeData] = useState([]);\r\n    // const [selectedEmployee, setSelectedEmployee] = useState(\"none\");\r\n\r\n    // const handleTypeSelect = e => {\r\n    //     setSelectedEmployee(e.value);\r\n    // };\r\n\r\n\r\n    // const status = ['open', 'in progress', \"in review\", \"done\"]\r\n\r\n\r\n\r\n    // const employeeList = () => {\r\n    //     axios.get('http://localhost:5000/employee')\r\n    //         .then(response => {\r\n    //             if (response.data.length > 0) {\r\n    //                 this.setState({\r\n    //                     employee: response.data.map(EmployeeSchema => `${EmployeeSchema.first_name} ${EmployeeSchema.last_name}`),\r\n\r\n\r\n    //                 })\r\n    //             }\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.log(error);\r\n    //         })\r\n    // }\r\n\r\n\r\n    // getEmployees() {\r\n\r\n    //     axios.get(\"http://localhost:5000/employee\")\r\n    //         .then(employee => {\r\n    //             console.log(employee)\r\n\r\n    //             const results = employee.data.map(employee => {\r\n    //                 return {\r\n    //                     employee: employee.first_name,\r\n\r\n    //                 }\r\n    //             })\r\n\r\n\r\n    //         }).catch(error => {\r\n    //             console.log(error)\r\n    //         })\r\n\r\n    // }\r\n\r\n\r\n\r\n    // const managerList = () => {\r\n    //     axios.get('http://localhost:5000/employee')\r\n    //         .then(response => {\r\n    //             let details = [];\r\n\r\n    //             for (var i in response.data) {\r\n    //                 details.push({ name: i, value: response.data[i] })\r\n    //             }\r\n\r\n    //             this.setState({ employee: details })\r\n\r\n    //         })\r\n    // }\r\n\r\n    // const optionTest = [\r\n    //     { value: 'chocolate', label: 'Chocolate' },\r\n    //     { value: 'strawberry', label: 'Strawberry' },\r\n    //     { value: 'vanilla', label: 'Vanilla' }\r\n    // ]\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/employee')\r\n            .then(res => {\r\n                setEmployee(res.data.map(EmployeeSchema => `${EmployeeSchema.first_name} ${EmployeeSchema.last_name}`)\r\n                )\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    // onChangeTitle = (e) => {\r\n    //     this.setState({\r\n    //         title: e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // onChangeDescription = (e) => {\r\n    //     this.setState({\r\n    //         description: e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // onChangeStartDate = (date) => {\r\n    //     this.setState({\r\n    //         startDate: date\r\n    //     })\r\n    // }\r\n\r\n    // onChangeManager = (e) => {\r\n    //     this.setState({\r\n    //         manager: e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // onChangeEmployee = (e) => {\r\n    //     this.setState({\r\n    //         employee: e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // onChangeStatus = (e) => {\r\n    //     this.setState({\r\n    //         status: e.target.value\r\n    //     })\r\n    // }\r\n\r\n\r\n\r\n    //DO NOT DELETE !!!\r\n    // onSubmit(e) {\r\n    //     e.preventDefault();\r\n\r\n    //     const project = {\r\n    //         title: this.state.title,\r\n    //         description: this.state.description,\r\n    //         manager: this.state.manager,\r\n    //         employee: this.state.employeeData,\r\n    //         startDate: this.state.startDate,\r\n    //         status: this.state.status\r\n    //     }\r\n    //     console.log(project);\r\n\r\n    //     axios.post('http://localhost:5000/projects', project)\r\n    //         .then(res => this.props.getSprints());\r\n\r\n    //     window.location = '/sprints';\r\n    // }\r\n\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // let checkArray = [];\r\n        // for (var key in this.state.employeeData) {\r\n        //     if (this.state.employeeData[key] === true) {\r\n        //         checkArray.push(key);\r\n        //     }\r\n        // }\r\n\r\n        let project = {\r\n            title: title,\r\n            description: description,\r\n            manager: manager,\r\n            employee: employee,\r\n            startDate: startDate,\r\n            status: status,\r\n            // employeeData: checkArray.toString()\r\n        };\r\n\r\n        axios.post('http://localhost:5000/projects', project)\r\n            .then(res => props.getSprints())\r\n\r\n    }\r\n\r\n\r\n    const employeeOption = employee.map((selectedOption) => {\r\n\r\n        return {\r\n            value: selectedOption,\r\n            label: selectedOption\r\n        }\r\n    })\r\n\r\n    const handleChange = selectedOption => {\r\n\r\n\r\n        console.log(selectedOption);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Col md=\"4\" className=\"mx-auto\">\r\n                <h1>Sprint Form</h1>\r\n                <Form onSubmit={onSubmit}  >\r\n\r\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Sprints Name</Form.Label>\r\n                        <Form.Control type=\"sprints\" placeholder=\"Sprints Name\" className=\"form-control\"\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                        <Form.Label>Sprints Details</Form.Label>\r\n                        <Form.Control type=\"details\" placeholder=\"Sprints Details\"\r\n                            className=\"form-control\"\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>Manager</Form.Label>\r\n                        <Form.Control as=\"select\" custom className=\"form-control\"\r\n                            value={manager}\r\n                            onChange={(e) => setManager(e.target.value)}>\r\n                            {employee.map((option) => {\r\n                                return <option\r\n                                    // key={option}\r\n                                    value={option}>{option}\r\n                                </option>;\r\n                            })}\r\n                        </Form.Control>\r\n\r\n                        {/* <Select\r\n                            options={employee}\r\n                            onChange={(e) => {\r\n                                setEmployeeData(e.target.value)\r\n                                console.log(e.target.value)\r\n                            }}\r\n                            value={employee.filter(function (option) {\r\n                                return option.value === selectedEmployee;\r\n                            })}\r\n                            label=\"Single select\"\r\n                        /> */}\r\n\r\n\r\n                    </Form.Group>\r\n\r\n\r\n\r\n                    {/* //DO NOT DELETE !!! */}\r\n                    {/* <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                            <Form.Label>Employee</Form.Label>\r\n                            <Form.Control as=\"select\" multiple className=\"form-control\"\r\n                                value={this.state.employee} onChange={(e) => {\r\n                                    this.setState({ employeeData: e.target.value })\r\n                                    console.log(e.target.value)\r\n                                }}>\r\n                                {this.state.employee.map(function (employee) {\r\n                                    return <option\r\n                                        key={employee}\r\n                                        value={employee}>{employee}\r\n                                    </option>;\r\n                                })}\r\n                            </Form.Control> */}\r\n\r\n\r\n                    <Form>Employee</Form>\r\n                    {/* <div class=\"form-check\">\r\n                        <input\r\n                            class=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            onChange={(e) => {\r\n                                setEmployeeData(e.target.value)\r\n                                console.log(e.target.value)\r\n                            }}\r\n                        />\r\n                        <label class=\"form-check-label\" for=\"defaultCheck1\">\r\n                            {employee.map((employee) => {\r\n                                return <option\r\n                                    key={employee}\r\n                                    value={employee}>{employee}\r\n                                </option>;\r\n                            })}\r\n                        </label>\r\n                    </div> */}\r\n                    <div>\r\n                        <Select options={employeeOption} onChange={handleChange} isMulti />\r\n                    </div>\r\n\r\n\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect3\">\r\n                        <Form.Label>Status</Form.Label>\r\n                        <Form.Control as=\"select\" custom defaultValue=\"Open\" className=\"form-control\"\r\n                            value={status}\r\n                            onChange={(e) => setStatus(e.target.value)}\r\n                        >\r\n                            {/* {status.map((options) => {\r\n                                return (\r\n                                    <option>{options}</option>\r\n                                )\r\n                            })} */}\r\n\r\n                            <option>Open</option>\r\n                            <option>In Progress</option>\r\n                            <option>In Review</option>\r\n                            <option>Done</option>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Button type=\"submit\">Submit form</Button>\r\n                </Form>\r\n            </Col>\r\n        </Container >\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default SprintsForms;\r\n","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Forms\\Form.js",["136","137","138","139","140"],"import React, { useState, useEffect} from \"react\";\r\nimport { Form, Button, Col, InputGroup, Row } from \"react-bootstrap\";\r\nimport \"../../App.css\";\r\nimport axios from \"axios\";\r\nimport Employee from \"../Employees/Employee\";\r\nimport { RiContactsBookUploadLine } from \"react-icons/ri\";\r\n\r\nconst initialValues = {\r\n\tfirst: \"\",\r\n\tlast: \"\",\r\n\tid: \"607300288c28a3208cc4cbe4\",\r\n  };\r\nexport default function Forms(props) {\r\n\r\n\tconst [values, setValues] = useState(initialValues);\r\n\r\n\tconst [validated, setValidated] = useState(false);\r\n\r\n\tconst handle=(e) => {\r\n\t\t\r\n\t\tconst { name, value } = e.target;\r\n\t\tsetValues({\r\n\t\t  ...values,\r\n\t\t  [name]: value,\r\n\t\t});\r\n\r\n\t\tconsole.log(e.target.value)\r\n\t\r\n\t}\r\n\tconst submit=(e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\taxios.post(\"http://localhost:5000/employee\",{\r\n\t\t\tfirst_name:values.first,\r\n\t\t\tlast_name:values.last,\r\n\t\t\troleId:values.id\r\n\t\t})\r\n\t\t.then(res=>{\r\n\t\t\tconsole.log(res.data.updatedEmpList)\r\n\t\t\tprops.setEmployees(res.data.updatedEmpList)\r\n\t\t})\r\n\t\t.catch(err=>console.log(err))\r\n\t\tconsole.log(values)\r\n\r\n\t}\r\n\t\r\n\tconst [roles, setRoles] = useState([]);\r\n\t\r\n\t  useEffect(() => {\r\n\t\taxios.get(\"http://localhost:5000/roles\")\r\n\t\t.then((res => {\r\n\t\t\tconsole.log(res.data)\r\n\t\t\tsetRoles(res.data)\r\n\t\t})) \r\n\t  }, [])\r\n\r\n\treturn (\r\n\t\t<Col className=\"mx-auto addemp-form\" md={12}>\r\n\t\t<h3>Add Employees</h3>\r\n\t\t<Form noValidate validated={validated} onSubmit={submit}>\r\n\t\t\t<Form.Group>\r\n\t\t\t\t<Form.Label>First Name</Form.Label>\r\n\t\t\t\t<Form.Control required type=\"text\" id = \"first\" name=\"first\" placeholder=\"First Name\"  onChange={handle}/>\r\n\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t</Form.Text>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group >\r\n\t\t\t\t<Form.Label>Last Name</Form.Label>\r\n\t\t\t\t<Form.Control required type=\"text\" id = \"last\" name=\"last\" placeholder=\"Last Name\" onChange={handle}  />\r\n\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t</Form.Text>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Form.Group>\r\n\t\t\t\t<Form.Label>Select Title</Form.Label>\r\n\t\t\t\t<Form.Control required as=\"select\" id = \"title\" onChange={handle} name=\"id\">\r\n\t\t\t\t\t{roles.map((role) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<option value={role.id}  key={role.id}>{role.title}</option>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Form.Control>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Button variant=\"primary\" type=\"submit\">\r\n\t\t\t\tSubmit</Button>\r\n\t\t</Form>\r\n\t\t</Col>\r\n\r\n\t);\r\n}\r\n","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\DropWrapper\\DropWrapper.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Col\\SprintsCol.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Item\\Item.js",["141","142"],"import React, { Fragment, useState, useRef } from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\n// import Window from \"../Window/Window\";\r\nimport ITEM_TYPE from \"../../data/types\";\r\n\r\nconst Item = ({ item, index, moveItem, status, }) => {\r\n    const ref = useRef(null);\r\n\r\n    const [, drop] = useDrop({\r\n        accept: ITEM_TYPE,\r\n        hover(item, monitor) {\r\n            if (!ref.current) {\r\n                return\r\n            }\r\n            const dragIndex = item.index;\r\n            const hoverIndex = index;\r\n\r\n            if (dragIndex === hoverIndex) {\r\n                return\r\n            }\r\n\r\n            const hoveredRect = ref.current.getBoundingClientRect();\r\n            const hoverMiddleY = (hoveredRect.bottom - hoveredRect.top) / 2;\r\n            const mousePosition = monitor.getClientOffset();\r\n            const hoverClientY = mousePosition.y - hoveredRect.top;\r\n\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return;\r\n            }\r\n\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return;\r\n            }\r\n            moveItem(dragIndex, hoverIndex);\r\n            item.index = hoverIndex;\r\n        },\r\n    });\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        type: ITEM_TYPE,\r\n        item: { ...item, index },\r\n        collect: monitor => ({\r\n            isDragging: monitor.isDragging()\r\n        })\r\n    });\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const onOpen = () => setShow(true);\r\n\r\n    const onClose = () => setShow(false);\r\n\r\n    drag(drop(ref));\r\n\r\n    return (\r\n        <Fragment>\r\n            <div\r\n                ref={ref}\r\n                style={{ opacity: isDragging ? 0 : 1 }}\r\n                className={\"item\"}\r\n                onClick={onOpen}\r\n            >\r\n                <div className={\"color-bar\"} style={{ backgroundColor: status.color }} />\r\n                <p className={\"item-title\"}>{item.title}</p>\r\n                <p className={\"item-content\"}>{item.content}</p>\r\n                <p className={\"item-status\"}>{item.icon}</p>\r\n            </div>\r\n            {/* <Window\r\n                item={item}\r\n                onClose={onClose}\r\n                show={show}\r\n            /> */}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Item;","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\data\\index.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Cards\\Cards.js",["143"],"C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Dashboard\\DashTable\\Table.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\DevInfo\\DevInfo.js",["144"],"import React from 'react'\r\nimport { Col, Card, Image } from \"react-bootstrap\";\r\n\r\nfunction DevInfo(props) {\r\n    return(\r\n<Col lg={6} md={12} className=\"mb-5\">\r\n<Col md={4} lg={6} className=\"float-left\">\r\n  <Image\r\n    src = {props.img}\r\n    className=\"mx-auto mb-md-0 mb-4 rounded z-depth-1 img-fluid\"\r\n    tag=\"img\"\r\n    alt=\"Sample avatar\"\r\n  />\r\n</Col>\r\n<Col md={8} lg={6} className=\"float-right\">\r\n  <h4 className=\"font-weight-bold mb-3\">{props.name}</h4>\r\n  <h6 className=\"font-weight-bold grey-text mb-3\">\r\n  Technologies:\r\n  </h6>\r\n  <p className=\"grey-text\">\r\n    {props.techs}\r\n  </p>\r\n</Col>\r\n</Col>\r\n    )\r\n} \r\n\r\nexport default DevInfo","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Charts\\PieChart.js",["145"],"import React, { PureComponent } from 'react';\r\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\r\n\r\nconst data = [\r\n    { name: 'Open', value: 4 },\r\n    { name: 'In Progress', value: 3 },\r\n    { name: 'In Review', value: 3 },\r\n    { name: 'Done', value: 2 },\r\n];\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n        </text>\r\n    );\r\n};\r\n\r\nexport default class CustomPieChart extends PureComponent {\r\n    // static demoUrl = 'https://codesandbox.io/s/pie-chart-with-customized-label-dlhhj';\r\n\r\n    render() {\r\n        return (\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <PieChart width={400} height={400}>\r\n                    <Pie\r\n                        data={data}\r\n                        cx=\"50%\"\r\n                        cy=\"50%\"\r\n                        labelLine={false}\r\n                        label={renderCustomizedLabel}\r\n                        outerRadius={80}\r\n                        fill=\"#8884d8\"\r\n                        dataKey=\"value\"\r\n                    >\r\n                        {data.map((entry, index) => (\r\n                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                        ))}\r\n                    </Pie>\r\n                </PieChart>\r\n            </ResponsiveContainer>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Table\\index.js",["146","147"],"import React, { useState, useEffect } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport TableRow from '../TableRow';\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction TableComponents(props) {\r\n\r\n  function getEmployees() {\r\n    return axios.get(\"http://localhost:5000/employee\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllEmployees();\r\n  }, [])\r\n  const getAllEmployees = () => {\r\n    getEmployees()\r\n      .then(res => {\r\n        props.setEmployees(res.data)\r\n        console.log(res.data)\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n  return (\r\n\r\n    <Table striped bordered hover size=\"sm\">\r\n      <thead>\r\n        <tr>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th>Title</th>\r\n          <th>Salary</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.employees.map(emp => {\r\n          return (\r\n            <TableRow\r\n              key={emp._id}\r\n              FirstName={emp.first_name}\r\n              LastName={emp.last_name}\r\n              Title={emp.role.title}\r\n              Salary={emp.role.salary}\r\n              id={emp._id}\r\n              setEmployees={props.setEmployees}\r\n            />\r\n          );\r\n        })}\r\n\r\n      </tbody>\r\n    </Table>\r\n\r\n  )\r\n}\r\n\r\nexport default TableComponents","C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\data\\types.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\TableRow\\index.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Col\\Col.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Row\\Row.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\GW_Coding_BootCamp\\Sprinter-React\\client\\src\\components\\Container\\Container.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":7,"column":10,"nodeType":"154","messageId":"155","endLine":7,"endColumn":14},{"ruleId":"156","severity":1,"message":"157","line":59,"column":27,"nodeType":"158","endLine":59,"endColumn":29,"suggestions":"159"},{"ruleId":"152","severity":1,"message":"160","line":3,"column":9,"nodeType":"154","messageId":"155","endLine":3,"endColumn":25},{"ruleId":"152","severity":1,"message":"161","line":5,"column":9,"nodeType":"154","messageId":"155","endLine":5,"endColumn":12},{"ruleId":"152","severity":1,"message":"162","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":17},{"ruleId":"152","severity":1,"message":"163","line":8,"column":15,"nodeType":"154","messageId":"155","endLine":8,"endColumn":21},{"ruleId":"152","severity":1,"message":"164","line":17,"column":12,"nodeType":"154","messageId":"155","endLine":17,"endColumn":24},{"ruleId":"152","severity":1,"message":"165","line":17,"column":26,"nodeType":"154","messageId":"155","endLine":17,"endColumn":41},{"ruleId":"152","severity":1,"message":"166","line":23,"column":11,"nodeType":"154","messageId":"155","endLine":23,"endColumn":19},{"ruleId":"152","severity":1,"message":"167","line":48,"column":16,"nodeType":"154","messageId":"155","endLine":48,"endColumn":20},{"ruleId":"152","severity":1,"message":"168","line":48,"column":22,"nodeType":"154","messageId":"155","endLine":48,"endColumn":27},{"ruleId":"152","severity":1,"message":"161","line":2,"column":16,"nodeType":"154","messageId":"155","endLine":2,"endColumn":19},{"ruleId":"152","severity":1,"message":"169","line":2,"column":27,"nodeType":"154","messageId":"155","endLine":2,"endColumn":32},{"ruleId":"152","severity":1,"message":"170","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":13},{"ruleId":"152","severity":1,"message":"171","line":1,"column":38,"nodeType":"154","messageId":"155","endLine":1,"endColumn":47},{"ruleId":"152","severity":1,"message":"172","line":2,"column":44,"nodeType":"154","messageId":"155","endLine":2,"endColumn":54},{"ruleId":"152","severity":1,"message":"173","line":2,"column":56,"nodeType":"154","messageId":"155","endLine":2,"endColumn":59},{"ruleId":"152","severity":1,"message":"174","line":22,"column":23,"nodeType":"154","messageId":"155","endLine":22,"endColumn":35},{"ruleId":"152","severity":1,"message":"175","line":26,"column":12,"nodeType":"154","messageId":"155","endLine":26,"endColumn":24},{"ruleId":"152","severity":1,"message":"176","line":26,"column":26,"nodeType":"154","messageId":"155","endLine":26,"endColumn":41},{"ruleId":"152","severity":1,"message":"172","line":2,"column":29,"nodeType":"154","messageId":"155","endLine":2,"endColumn":39},{"ruleId":"152","severity":1,"message":"173","line":2,"column":41,"nodeType":"154","messageId":"155","endLine":2,"endColumn":44},{"ruleId":"152","severity":1,"message":"177","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":16},{"ruleId":"152","severity":1,"message":"178","line":6,"column":10,"nodeType":"154","messageId":"155","endLine":6,"endColumn":34},{"ruleId":"152","severity":1,"message":"179","line":17,"column":20,"nodeType":"154","messageId":"155","endLine":17,"endColumn":32},{"ruleId":"152","severity":1,"message":"180","line":47,"column":12,"nodeType":"154","messageId":"155","endLine":47,"endColumn":16},{"ruleId":"152","severity":1,"message":"181","line":51,"column":11,"nodeType":"154","messageId":"155","endLine":51,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":6,"column":1,"nodeType":"184","endLine":19,"endColumn":2},{"ruleId":"152","severity":1,"message":"185","line":2,"column":15,"nodeType":"154","messageId":"155","endLine":2,"endColumn":19},{"ruleId":"152","severity":1,"message":"186","line":2,"column":25,"nodeType":"154","messageId":"155","endLine":2,"endColumn":31},{"ruleId":"152","severity":1,"message":"187","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"156","severity":1,"message":"188","line":15,"column":6,"nodeType":"158","endLine":15,"endColumn":8,"suggestions":"189"},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'items'. Either include it or remove the dependency array.","ArrayExpression",["192"],"'FormEmployeeData' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Button' is defined but never used.","'sprintTitles' is assigned a value but never used.","'setSprintTitles' is assigned a value but never used.","'runAxios' is assigned a value but never used.","'name' is assigned a value but never used.","'value' is assigned a value but never used.","'Image' is defined but never used.","'React' is defined but never used.","'Component' is defined but never used.","'InputGroup' is defined but never used.","'Row' is defined but never used.","'setstartDate' is assigned a value but never used.","'employeeData' is assigned a value but never used.","'setEmployeeData' is assigned a value but never used.","'Employee' is defined but never used.","'RiContactsBookUploadLine' is defined but never used.","'setValidated' is assigned a value but never used.","'show' is assigned a value but never used.","'onClose' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Card' is defined but never used.","'Sector' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllEmployees'. Either include it or remove the dependency array.",["193"],"no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [items]",{"range":"198","text":"199"},"Update the dependencies array to be: [getAllEmployees]",{"range":"200","text":"201"},[1842,1844],"[items]",[343,345],"[getAllEmployees]"]