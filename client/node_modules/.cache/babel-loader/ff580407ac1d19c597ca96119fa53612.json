{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter';\nimport { getNodeClientOffset, getEventClientOffset, getDragPreviewOffset } from './OffsetUtils';\nimport { createNativeDragSource, matchNativeItemType } from './NativeDragSources';\nimport * as NativeTypes from './NativeTypes';\nimport { OptionsReader } from './OptionsReader';\nexport var HTML5BackendImpl = /*#__PURE__*/function () {\n  function HTML5BackendImpl(manager, globalContext, options) {\n    var _this = this;\n\n    _classCallCheck(this, HTML5BackendImpl);\n\n    this.sourcePreviewNodes = new Map();\n    this.sourcePreviewNodeOptions = new Map();\n    this.sourceNodes = new Map();\n    this.sourceNodeOptions = new Map();\n    this.dragStartSourceIds = null;\n    this.dropTargetIds = [];\n    this.dragEnterTargetIds = [];\n    this.currentNativeSource = null;\n    this.currentNativeHandle = null;\n    this.currentDragSourceNode = null;\n    this.altKeyPressed = false;\n    this.mouseMoveTimeoutTimer = null;\n    this.asyncEndDragFrameId = null;\n    this.dragOverTargetIds = null;\n\n    this.getSourceClientOffset = function (sourceId) {\n      var source = _this.sourceNodes.get(sourceId);\n\n      return source && getNodeClientOffset(source) || null;\n    };\n\n    this.endDragNativeItem = function () {\n      if (!_this.isDraggingNativeItem()) {\n        return;\n      }\n\n      _this.actions.endDrag();\n\n      if (_this.currentNativeHandle) {\n        _this.registry.removeSource(_this.currentNativeHandle);\n      }\n\n      _this.currentNativeHandle = null;\n      _this.currentNativeSource = null;\n    };\n\n    this.isNodeInDocument = function (node) {\n      // Check the node either in the main document or in the current context\n      return Boolean(node && _this.document && _this.document.body && document.body.contains(node));\n    };\n\n    this.endDragIfSourceWasRemovedFromDOM = function () {\n      var node = _this.currentDragSourceNode;\n\n      if (node == null || _this.isNodeInDocument(node)) {\n        return;\n      }\n\n      if (_this.clearCurrentDragSourceNode() && _this.monitor.isDragging()) {\n        _this.actions.endDrag();\n      }\n    };\n\n    this.handleTopDragStartCapture = function () {\n      _this.clearCurrentDragSourceNode();\n\n      _this.dragStartSourceIds = [];\n    };\n\n    this.handleTopDragStart = function (e) {\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      var dragStartSourceIds = _this.dragStartSourceIds;\n      _this.dragStartSourceIds = null;\n      var clientOffset = getEventClientOffset(e); // Avoid crashing if we missed a drop event or our previous drag died\n\n      if (_this.monitor.isDragging()) {\n        _this.actions.endDrag();\n      } // Don't publish the source just yet (see why below)\n\n\n      _this.actions.beginDrag(dragStartSourceIds || [], {\n        publishSource: false,\n        getSourceClientOffset: _this.getSourceClientOffset,\n        clientOffset: clientOffset\n      });\n\n      var dataTransfer = e.dataTransfer;\n      var nativeType = matchNativeItemType(dataTransfer);\n\n      if (_this.monitor.isDragging()) {\n        if (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n          // Use custom drag image if user specifies it.\n          // If child drag source refuses drag but parent agrees,\n          // use parent's node as drag image. Neither works in IE though.\n          var sourceId = _this.monitor.getSourceId();\n\n          var sourceNode = _this.sourceNodes.get(sourceId);\n\n          var dragPreview = _this.sourcePreviewNodes.get(sourceId) || sourceNode;\n\n          if (dragPreview) {\n            var _this$getCurrentSourc = _this.getCurrentSourcePreviewNodeOptions(),\n                anchorX = _this$getCurrentSourc.anchorX,\n                anchorY = _this$getCurrentSourc.anchorY,\n                offsetX = _this$getCurrentSourc.offsetX,\n                offsetY = _this$getCurrentSourc.offsetY;\n\n            var anchorPoint = {\n              anchorX: anchorX,\n              anchorY: anchorY\n            };\n            var offsetPoint = {\n              offsetX: offsetX,\n              offsetY: offsetY\n            };\n            var dragPreviewOffset = getDragPreviewOffset(sourceNode, dragPreview, clientOffset, anchorPoint, offsetPoint);\n            dataTransfer.setDragImage(dragPreview, dragPreviewOffset.x, dragPreviewOffset.y);\n          }\n        }\n\n        try {\n          // Firefox won't drag without setting data\n          dataTransfer === null || dataTransfer === void 0 ? void 0 : dataTransfer.setData('application/json', {});\n        } catch (err) {// IE doesn't support MIME types in setData\n        } // Store drag source node so we can check whether\n        // it is removed from DOM and trigger endDrag manually.\n\n\n        _this.setCurrentDragSourceNode(e.target); // Now we are ready to publish the drag source.. or are we not?\n\n\n        var _this$getCurrentSourc2 = _this.getCurrentSourcePreviewNodeOptions(),\n            captureDraggingState = _this$getCurrentSourc2.captureDraggingState;\n\n        if (!captureDraggingState) {\n          // Usually we want to publish it in the next tick so that browser\n          // is able to screenshot the current (not yet dragging) state.\n          //\n          // It also neatly avoids a situation where render() returns null\n          // in the same tick for the source element, and browser freaks out.\n          setTimeout(function () {\n            return _this.actions.publishDragSource();\n          }, 0);\n        } else {\n          // In some cases the user may want to override this behavior, e.g.\n          // to work around IE not supporting custom drag previews.\n          //\n          // When using a custom drag layer, the only way to prevent\n          // the default drag preview from drawing in IE is to screenshot\n          // the dragging state in which the node itself has zero opacity\n          // and height. In this case, though, returning null from render()\n          // will abruptly end the dragging, which is not obvious.\n          //\n          // This is the reason such behavior is strictly opt-in.\n          _this.actions.publishDragSource();\n        }\n      } else if (nativeType) {\n        // A native item (such as URL) dragged from inside the document\n        _this.beginDragNativeItem(nativeType);\n      } else if (dataTransfer && !dataTransfer.types && (e.target && !e.target.hasAttribute || !e.target.hasAttribute('draggable'))) {\n        // Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n        // Just let it drag. It's a native type (URL or text) and will be picked up in\n        // dragenter handler.\n        return;\n      } else {\n        // If by this time no drag source reacted, tell browser not to drag.\n        e.preventDefault();\n      }\n    };\n\n    this.handleTopDragEndCapture = function () {\n      if (_this.clearCurrentDragSourceNode() && _this.monitor.isDragging()) {\n        // Firefox can dispatch this event in an infinite loop\n        // if dragend handler does something like showing an alert.\n        // Only proceed if we have not handled it already.\n        _this.actions.endDrag();\n      }\n    };\n\n    this.handleTopDragEnterCapture = function (e) {\n      _this.dragEnterTargetIds = [];\n\n      var isFirstEnter = _this.enterLeaveCounter.enter(e.target);\n\n      if (!isFirstEnter || _this.monitor.isDragging()) {\n        return;\n      }\n\n      var dataTransfer = e.dataTransfer;\n      var nativeType = matchNativeItemType(dataTransfer);\n\n      if (nativeType) {\n        // A native item (such as file or URL) dragged from outside the document\n        _this.beginDragNativeItem(nativeType, dataTransfer);\n      }\n    };\n\n    this.handleTopDragEnter = function (e) {\n      var dragEnterTargetIds = _this.dragEnterTargetIds;\n      _this.dragEnterTargetIds = [];\n\n      if (!_this.monitor.isDragging()) {\n        // This is probably a native item type we don't understand.\n        return;\n      }\n\n      _this.altKeyPressed = e.altKey; // If the target changes position as the result of `dragenter`, `dragover` might still\n      // get dispatched despite target being no longer there. The easy solution is to check\n      // whether there actually is a target before firing `hover`.\n\n      if (dragEnterTargetIds.length > 0) {\n        _this.actions.hover(dragEnterTargetIds, {\n          clientOffset: getEventClientOffset(e)\n        });\n      }\n\n      var canDrop = dragEnterTargetIds.some(function (targetId) {\n        return _this.monitor.canDropOnTarget(targetId);\n      });\n\n      if (canDrop) {\n        // IE requires this to fire dragover events\n        e.preventDefault();\n\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = _this.getCurrentDropEffect();\n        }\n      }\n    };\n\n    this.handleTopDragOverCapture = function () {\n      _this.dragOverTargetIds = [];\n    };\n\n    this.handleTopDragOver = function (e) {\n      var dragOverTargetIds = _this.dragOverTargetIds;\n      _this.dragOverTargetIds = [];\n\n      if (!_this.monitor.isDragging()) {\n        // This is probably a native item type we don't understand.\n        // Prevent default \"drop and blow away the whole document\" action.\n        e.preventDefault();\n\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = 'none';\n        }\n\n        return;\n      }\n\n      _this.altKeyPressed = e.altKey;\n\n      _this.actions.hover(dragOverTargetIds || [], {\n        clientOffset: getEventClientOffset(e)\n      });\n\n      var canDrop = (dragOverTargetIds || []).some(function (targetId) {\n        return _this.monitor.canDropOnTarget(targetId);\n      });\n\n      if (canDrop) {\n        // Show user-specified drop effect.\n        e.preventDefault();\n\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = _this.getCurrentDropEffect();\n        }\n      } else if (_this.isDraggingNativeItem()) {\n        // Don't show a nice cursor but still prevent default\n        // \"drop and blow away the whole document\" action.\n        e.preventDefault();\n      } else {\n        e.preventDefault();\n\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = 'none';\n        }\n      }\n    };\n\n    this.handleTopDragLeaveCapture = function (e) {\n      if (_this.isDraggingNativeItem()) {\n        e.preventDefault();\n      }\n\n      var isLastLeave = _this.enterLeaveCounter.leave(e.target);\n\n      if (!isLastLeave) {\n        return;\n      }\n\n      if (_this.isDraggingNativeItem()) {\n        setTimeout(function () {\n          return _this.endDragNativeItem();\n        }, 0);\n      }\n    };\n\n    this.handleTopDropCapture = function (e) {\n      _this.dropTargetIds = [];\n\n      if (_this.isDraggingNativeItem()) {\n        var _this$currentNativeSo;\n\n        e.preventDefault();\n        (_this$currentNativeSo = _this.currentNativeSource) === null || _this$currentNativeSo === void 0 ? void 0 : _this$currentNativeSo.loadDataTransfer(e.dataTransfer);\n      }\n\n      _this.enterLeaveCounter.reset();\n    };\n\n    this.handleTopDrop = function (e) {\n      var dropTargetIds = _this.dropTargetIds;\n      _this.dropTargetIds = [];\n\n      _this.actions.hover(dropTargetIds, {\n        clientOffset: getEventClientOffset(e)\n      });\n\n      _this.actions.drop({\n        dropEffect: _this.getCurrentDropEffect()\n      });\n\n      if (_this.isDraggingNativeItem()) {\n        _this.endDragNativeItem();\n      } else if (_this.monitor.isDragging()) {\n        _this.actions.endDrag();\n      }\n    };\n\n    this.handleSelectStart = function (e) {\n      var target = e.target; // Only IE requires us to explicitly say\n      // we want drag drop operation to start\n\n      if (typeof target.dragDrop !== 'function') {\n        return;\n      } // Inputs and textareas should be selectable\n\n\n      if (target.tagName === 'INPUT' || target.tagName === 'SELECT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n        return;\n      } // For other targets, ask IE\n      // to enable drag and drop\n\n\n      e.preventDefault();\n      target.dragDrop();\n    };\n\n    this.options = new OptionsReader(globalContext, options);\n    this.actions = manager.getActions();\n    this.monitor = manager.getMonitor();\n    this.registry = manager.getRegistry();\n    this.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument);\n  }\n  /**\n   * Generate profiling statistics for the HTML5Backend.\n   */\n\n\n  _createClass(HTML5BackendImpl, [{\n    key: \"profile\",\n    value: function profile() {\n      var _this$dragStartSource, _this$dragOverTargetI;\n\n      return {\n        sourcePreviewNodes: this.sourcePreviewNodes.size,\n        sourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n        sourceNodeOptions: this.sourceNodeOptions.size,\n        sourceNodes: this.sourceNodes.size,\n        dragStartSourceIds: ((_this$dragStartSource = this.dragStartSourceIds) === null || _this$dragStartSource === void 0 ? void 0 : _this$dragStartSource.length) || 0,\n        dropTargetIds: this.dropTargetIds.length,\n        dragEnterTargetIds: this.dragEnterTargetIds.length,\n        dragOverTargetIds: ((_this$dragOverTargetI = this.dragOverTargetIds) === null || _this$dragOverTargetI === void 0 ? void 0 : _this$dragOverTargetI.length) || 0\n      };\n    } // public for test\n\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.options.window;\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.options.document;\n    }\n    /**\n     * Get the root element to use for event subscriptions\n     */\n\n  }, {\n    key: \"rootElement\",\n    get: function get() {\n      return this.options.rootElement;\n    }\n  }, {\n    key: \"setup\",\n    value: function setup() {\n      var root = this.rootElement;\n\n      if (root === undefined) {\n        return;\n      }\n\n      if (root.__isReactDndBackendSetUp) {\n        throw new Error('Cannot have two HTML5 backends at the same time.');\n      }\n\n      root.__isReactDndBackendSetUp = true;\n      this.addEventListeners(root);\n    }\n  }, {\n    key: \"teardown\",\n    value: function teardown() {\n      var root = this.rootElement;\n\n      if (root === undefined) {\n        return;\n      }\n\n      root.__isReactDndBackendSetUp = false;\n      this.removeEventListeners(this.rootElement);\n      this.clearCurrentDragSourceNode();\n\n      if (this.asyncEndDragFrameId) {\n        var _this$window;\n\n        (_this$window = this.window) === null || _this$window === void 0 ? void 0 : _this$window.cancelAnimationFrame(this.asyncEndDragFrameId);\n      }\n    }\n  }, {\n    key: \"connectDragPreview\",\n    value: function connectDragPreview(sourceId, node, options) {\n      var _this2 = this;\n\n      this.sourcePreviewNodeOptions.set(sourceId, options);\n      this.sourcePreviewNodes.set(sourceId, node);\n      return function () {\n        _this2.sourcePreviewNodes.delete(sourceId);\n\n        _this2.sourcePreviewNodeOptions.delete(sourceId);\n      };\n    }\n  }, {\n    key: \"connectDragSource\",\n    value: function connectDragSource(sourceId, node, options) {\n      var _this3 = this;\n\n      this.sourceNodes.set(sourceId, node);\n      this.sourceNodeOptions.set(sourceId, options);\n\n      var handleDragStart = function handleDragStart(e) {\n        return _this3.handleDragStart(e, sourceId);\n      };\n\n      var handleSelectStart = function handleSelectStart(e) {\n        return _this3.handleSelectStart(e);\n      };\n\n      node.setAttribute('draggable', 'true');\n      node.addEventListener('dragstart', handleDragStart);\n      node.addEventListener('selectstart', handleSelectStart);\n      return function () {\n        _this3.sourceNodes.delete(sourceId);\n\n        _this3.sourceNodeOptions.delete(sourceId);\n\n        node.removeEventListener('dragstart', handleDragStart);\n        node.removeEventListener('selectstart', handleSelectStart);\n        node.setAttribute('draggable', 'false');\n      };\n    }\n  }, {\n    key: \"connectDropTarget\",\n    value: function connectDropTarget(targetId, node) {\n      var _this4 = this;\n\n      var handleDragEnter = function handleDragEnter(e) {\n        return _this4.handleDragEnter(e, targetId);\n      };\n\n      var handleDragOver = function handleDragOver(e) {\n        return _this4.handleDragOver(e, targetId);\n      };\n\n      var handleDrop = function handleDrop(e) {\n        return _this4.handleDrop(e, targetId);\n      };\n\n      node.addEventListener('dragenter', handleDragEnter);\n      node.addEventListener('dragover', handleDragOver);\n      node.addEventListener('drop', handleDrop);\n      return function () {\n        node.removeEventListener('dragenter', handleDragEnter);\n        node.removeEventListener('dragover', handleDragOver);\n        node.removeEventListener('drop', handleDrop);\n      };\n    }\n  }, {\n    key: \"addEventListeners\",\n    value: function addEventListeners(target) {\n      // SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n      if (!target.addEventListener) {\n        return;\n      }\n\n      target.addEventListener('dragstart', this.handleTopDragStart);\n      target.addEventListener('dragstart', this.handleTopDragStartCapture, true);\n      target.addEventListener('dragend', this.handleTopDragEndCapture, true);\n      target.addEventListener('dragenter', this.handleTopDragEnter);\n      target.addEventListener('dragenter', this.handleTopDragEnterCapture, true);\n      target.addEventListener('dragleave', this.handleTopDragLeaveCapture, true);\n      target.addEventListener('dragover', this.handleTopDragOver);\n      target.addEventListener('dragover', this.handleTopDragOverCapture, true);\n      target.addEventListener('drop', this.handleTopDrop);\n      target.addEventListener('drop', this.handleTopDropCapture, true);\n    }\n  }, {\n    key: \"removeEventListeners\",\n    value: function removeEventListeners(target) {\n      // SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n      if (!target.removeEventListener) {\n        return;\n      }\n\n      target.removeEventListener('dragstart', this.handleTopDragStart);\n      target.removeEventListener('dragstart', this.handleTopDragStartCapture, true);\n      target.removeEventListener('dragend', this.handleTopDragEndCapture, true);\n      target.removeEventListener('dragenter', this.handleTopDragEnter);\n      target.removeEventListener('dragenter', this.handleTopDragEnterCapture, true);\n      target.removeEventListener('dragleave', this.handleTopDragLeaveCapture, true);\n      target.removeEventListener('dragover', this.handleTopDragOver);\n      target.removeEventListener('dragover', this.handleTopDragOverCapture, true);\n      target.removeEventListener('drop', this.handleTopDrop);\n      target.removeEventListener('drop', this.handleTopDropCapture, true);\n    }\n  }, {\n    key: \"getCurrentSourceNodeOptions\",\n    value: function getCurrentSourceNodeOptions() {\n      var sourceId = this.monitor.getSourceId();\n      var sourceNodeOptions = this.sourceNodeOptions.get(sourceId);\n      return _objectSpread({\n        dropEffect: this.altKeyPressed ? 'copy' : 'move'\n      }, sourceNodeOptions || {});\n    }\n  }, {\n    key: \"getCurrentDropEffect\",\n    value: function getCurrentDropEffect() {\n      if (this.isDraggingNativeItem()) {\n        // It makes more sense to default to 'copy' for native resources\n        return 'copy';\n      }\n\n      return this.getCurrentSourceNodeOptions().dropEffect;\n    }\n  }, {\n    key: \"getCurrentSourcePreviewNodeOptions\",\n    value: function getCurrentSourcePreviewNodeOptions() {\n      var sourceId = this.monitor.getSourceId();\n      var sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId);\n      return _objectSpread({\n        anchorX: 0.5,\n        anchorY: 0.5,\n        captureDraggingState: false\n      }, sourcePreviewNodeOptions || {});\n    }\n  }, {\n    key: \"isDraggingNativeItem\",\n    value: function isDraggingNativeItem() {\n      var itemType = this.monitor.getItemType();\n      return Object.keys(NativeTypes).some(function (key) {\n        return NativeTypes[key] === itemType;\n      });\n    }\n  }, {\n    key: \"beginDragNativeItem\",\n    value: function beginDragNativeItem(type, dataTransfer) {\n      this.clearCurrentDragSourceNode();\n      this.currentNativeSource = createNativeDragSource(type, dataTransfer);\n      this.currentNativeHandle = this.registry.addSource(type, this.currentNativeSource);\n      this.actions.beginDrag([this.currentNativeHandle]);\n    }\n  }, {\n    key: \"setCurrentDragSourceNode\",\n    value: function setCurrentDragSourceNode(node) {\n      var _this5 = this;\n\n      this.clearCurrentDragSourceNode();\n      this.currentDragSourceNode = node; // A timeout of > 0 is necessary to resolve Firefox issue referenced\n      // See:\n      //   * https://github.com/react-dnd/react-dnd/pull/928\n      //   * https://github.com/react-dnd/react-dnd/issues/869\n\n      var MOUSE_MOVE_TIMEOUT = 1000; // Receiving a mouse event in the middle of a dragging operation\n      // means it has ended and the drag source node disappeared from DOM,\n      // so the browser didn't dispatch the dragend event.\n      //\n      // We need to wait before we start listening for mousemove events.\n      // This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n      // immediately in some browsers.\n      //\n      // See:\n      //   * https://github.com/react-dnd/react-dnd/pull/928\n      //   * https://github.com/react-dnd/react-dnd/issues/869\n      //\n\n      this.mouseMoveTimeoutTimer = setTimeout(function () {\n        var _this5$rootElement;\n\n        return (_this5$rootElement = _this5.rootElement) === null || _this5$rootElement === void 0 ? void 0 : _this5$rootElement.addEventListener('mousemove', _this5.endDragIfSourceWasRemovedFromDOM, true);\n      }, MOUSE_MOVE_TIMEOUT);\n    }\n  }, {\n    key: \"clearCurrentDragSourceNode\",\n    value: function clearCurrentDragSourceNode() {\n      if (this.currentDragSourceNode) {\n        this.currentDragSourceNode = null;\n\n        if (this.rootElement) {\n          var _this$window2;\n\n          (_this$window2 = this.window) === null || _this$window2 === void 0 ? void 0 : _this$window2.clearTimeout(this.mouseMoveTimeoutTimer || undefined);\n          this.rootElement.removeEventListener('mousemove', this.endDragIfSourceWasRemovedFromDOM, true);\n        }\n\n        this.mouseMoveTimeoutTimer = null;\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"handleDragStart\",\n    value: function handleDragStart(e, sourceId) {\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      if (!this.dragStartSourceIds) {\n        this.dragStartSourceIds = [];\n      }\n\n      this.dragStartSourceIds.unshift(sourceId);\n    }\n  }, {\n    key: \"handleDragEnter\",\n    value: function handleDragEnter(e, targetId) {\n      this.dragEnterTargetIds.unshift(targetId);\n    }\n  }, {\n    key: \"handleDragOver\",\n    value: function handleDragOver(e, targetId) {\n      if (this.dragOverTargetIds === null) {\n        this.dragOverTargetIds = [];\n      }\n\n      this.dragOverTargetIds.unshift(targetId);\n    }\n  }, {\n    key: \"handleDrop\",\n    value: function handleDrop(e, targetId) {\n      this.dropTargetIds.unshift(targetId);\n    }\n  }]);\n\n  return HTML5BackendImpl;\n}();","map":{"version":3,"sources":["C:/Users/alexa/OneDrive/Desktop/GW_Coding_BootCamp/Sprinter-React/node_modules/react-dnd-html5-backend/dist/esm/HTML5BackendImpl.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","prototype","EnterLeaveCounter","getNodeClientOffset","getEventClientOffset","getDragPreviewOffset","createNativeDragSource","matchNativeItemType","NativeTypes","OptionsReader","HTML5BackendImpl","manager","globalContext","options","_this","sourcePreviewNodes","Map","sourcePreviewNodeOptions","sourceNodes","sourceNodeOptions","dragStartSourceIds","dropTargetIds","dragEnterTargetIds","currentNativeSource","currentNativeHandle","currentDragSourceNode","altKeyPressed","mouseMoveTimeoutTimer","asyncEndDragFrameId","dragOverTargetIds","getSourceClientOffset","sourceId","get","endDragNativeItem","isDraggingNativeItem","actions","endDrag","registry","removeSource","isNodeInDocument","node","Boolean","document","body","contains","endDragIfSourceWasRemovedFromDOM","clearCurrentDragSourceNode","monitor","isDragging","handleTopDragStartCapture","handleTopDragStart","e","defaultPrevented","clientOffset","beginDrag","publishSource","dataTransfer","nativeType","setDragImage","getSourceId","sourceNode","dragPreview","_this$getCurrentSourc","getCurrentSourcePreviewNodeOptions","anchorX","anchorY","offsetX","offsetY","anchorPoint","offsetPoint","dragPreviewOffset","x","y","setData","err","setCurrentDragSourceNode","_this$getCurrentSourc2","captureDraggingState","setTimeout","publishDragSource","beginDragNativeItem","types","hasAttribute","preventDefault","handleTopDragEndCapture","handleTopDragEnterCapture","isFirstEnter","enterLeaveCounter","enter","handleTopDragEnter","altKey","hover","canDrop","some","targetId","canDropOnTarget","dropEffect","getCurrentDropEffect","handleTopDragOverCapture","handleTopDragOver","handleTopDragLeaveCapture","isLastLeave","leave","handleTopDropCapture","_this$currentNativeSo","loadDataTransfer","reset","handleTopDrop","drop","handleSelectStart","dragDrop","tagName","isContentEditable","getActions","getMonitor","getRegistry","profile","_this$dragStartSource","_this$dragOverTargetI","size","window","rootElement","setup","root","undefined","__isReactDndBackendSetUp","Error","addEventListeners","teardown","removeEventListeners","_this$window","cancelAnimationFrame","connectDragPreview","_this2","set","delete","connectDragSource","_this3","handleDragStart","setAttribute","addEventListener","removeEventListener","connectDropTarget","_this4","handleDragEnter","handleDragOver","handleDrop","getCurrentSourceNodeOptions","itemType","getItemType","type","addSource","_this5","MOUSE_MOVE_TIMEOUT","_this5$rootElement","_this$window2","clearTimeout","unshift"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIG,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GP,IAAAA,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;AAAiC;;AAAC,SAAOH,IAAP;AAAc;;AAErV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEf,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAEC,QAAAA,eAAe,CAACP,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAIhB,MAAM,CAACkB,yBAAX,EAAsC;AAAElB,MAAAA,MAAM,CAACmB,gBAAP,CAAwBT,MAAxB,EAAgCV,MAAM,CAACkB,yBAAP,CAAiCJ,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAElB,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAEhB,QAAAA,MAAM,CAACoB,cAAP,CAAsBV,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAEthB,SAASO,eAAT,CAAyBI,GAAzB,EAA8BL,GAA9B,EAAmCM,KAAnC,EAA0C;AAAE,MAAIN,GAAG,IAAIK,GAAX,EAAgB;AAAErB,IAAAA,MAAM,CAACoB,cAAP,CAAsBC,GAAtB,EAA2BL,GAA3B,EAAgC;AAAEM,MAAAA,KAAK,EAAEA,KAAT;AAAgBhB,MAAAA,UAAU,EAAE,IAA5B;AAAkCiB,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEH,IAAAA,GAAG,CAACL,GAAD,CAAH,GAAWM,KAAX;AAAmB;;AAAC,SAAOD,GAAP;AAAa;;AAEjN,SAASI,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,iBAAT,CAA2BnB,MAA3B,EAAmCoB,KAAnC,EAA0C;AAAE,OAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,KAAK,CAACjB,MAA1B,EAAkCF,CAAC,EAAnC,EAAuC;AAAE,QAAIoB,UAAU,GAAGD,KAAK,CAACnB,CAAD,CAAtB;AAA2BoB,IAAAA,UAAU,CAACzB,UAAX,GAAwByB,UAAU,CAACzB,UAAX,IAAyB,KAAjD;AAAwDyB,IAAAA,UAAU,CAACR,YAAX,GAA0B,IAA1B;AAAgC,QAAI,WAAWQ,UAAf,EAA2BA,UAAU,CAACP,QAAX,GAAsB,IAAtB;AAA4BxB,IAAAA,MAAM,CAACoB,cAAP,CAAsBV,MAAtB,EAA8BqB,UAAU,CAACf,GAAzC,EAA8Ce,UAA9C;AAA4D;AAAE;;AAE7T,SAASC,YAAT,CAAsBL,WAAtB,EAAmCM,UAAnC,EAA+CC,WAA/C,EAA4D;AAAE,MAAID,UAAJ,EAAgBJ,iBAAiB,CAACF,WAAW,CAACQ,SAAb,EAAwBF,UAAxB,CAAjB;AAAsD,MAAIC,WAAJ,EAAiBL,iBAAiB,CAACF,WAAD,EAAcO,WAAd,CAAjB;AAA6C,SAAOP,WAAP;AAAqB;;AAEvN,SAASS,iBAAT,QAAkC,qBAAlC;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,EAAoDC,oBAApD,QAAgF,eAAhF;AACA,SAASC,sBAAT,EAAiCC,mBAAjC,QAA4D,qBAA5D;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAO,IAAIC,gBAAgB,GAAG,aAAa,YAAY;AACrD,WAASA,gBAAT,CAA0BC,OAA1B,EAAmCC,aAAnC,EAAkDC,OAAlD,EAA2D;AACzD,QAAIC,KAAK,GAAG,IAAZ;;AAEAvB,IAAAA,eAAe,CAAC,IAAD,EAAOmB,gBAAP,CAAf;;AAEA,SAAKK,kBAAL,GAA0B,IAAIC,GAAJ,EAA1B;AACA,SAAKC,wBAAL,GAAgC,IAAID,GAAJ,EAAhC;AACA,SAAKE,WAAL,GAAmB,IAAIF,GAAJ,EAAnB;AACA,SAAKG,iBAAL,GAAyB,IAAIH,GAAJ,EAAzB;AACA,SAAKI,kBAAL,GAA0B,IAA1B;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,kBAAL,GAA0B,EAA1B;AACA,SAAKC,mBAAL,GAA2B,IAA3B;AACA,SAAKC,mBAAL,GAA2B,IAA3B;AACA,SAAKC,qBAAL,GAA6B,IAA7B;AACA,SAAKC,aAAL,GAAqB,KAArB;AACA,SAAKC,qBAAL,GAA6B,IAA7B;AACA,SAAKC,mBAAL,GAA2B,IAA3B;AACA,SAAKC,iBAAL,GAAyB,IAAzB;;AAEA,SAAKC,qBAAL,GAA6B,UAAUC,QAAV,EAAoB;AAC/C,UAAInD,MAAM,GAAGkC,KAAK,CAACI,WAAN,CAAkBc,GAAlB,CAAsBD,QAAtB,CAAb;;AAEA,aAAOnD,MAAM,IAAIuB,mBAAmB,CAACvB,MAAD,CAA7B,IAAyC,IAAhD;AACD,KAJD;;AAMA,SAAKqD,iBAAL,GAAyB,YAAY;AACnC,UAAI,CAACnB,KAAK,CAACoB,oBAAN,EAAL,EAAmC;AACjC;AACD;;AAEDpB,MAAAA,KAAK,CAACqB,OAAN,CAAcC,OAAd;;AAEA,UAAItB,KAAK,CAACU,mBAAV,EAA+B;AAC7BV,QAAAA,KAAK,CAACuB,QAAN,CAAeC,YAAf,CAA4BxB,KAAK,CAACU,mBAAlC;AACD;;AAEDV,MAAAA,KAAK,CAACU,mBAAN,GAA4B,IAA5B;AACAV,MAAAA,KAAK,CAACS,mBAAN,GAA4B,IAA5B;AACD,KAbD;;AAeA,SAAKgB,gBAAL,GAAwB,UAAUC,IAAV,EAAgB;AACtC;AACA,aAAOC,OAAO,CAACD,IAAI,IAAI1B,KAAK,CAAC4B,QAAd,IAA0B5B,KAAK,CAAC4B,QAAN,CAAeC,IAAzC,IAAiDD,QAAQ,CAACC,IAAT,CAAcC,QAAd,CAAuBJ,IAAvB,CAAlD,CAAd;AACD,KAHD;;AAKA,SAAKK,gCAAL,GAAwC,YAAY;AAClD,UAAIL,IAAI,GAAG1B,KAAK,CAACW,qBAAjB;;AAEA,UAAIe,IAAI,IAAI,IAAR,IAAgB1B,KAAK,CAACyB,gBAAN,CAAuBC,IAAvB,CAApB,EAAkD;AAChD;AACD;;AAED,UAAI1B,KAAK,CAACgC,0BAAN,MAAsChC,KAAK,CAACiC,OAAN,CAAcC,UAAd,EAA1C,EAAsE;AACpElC,QAAAA,KAAK,CAACqB,OAAN,CAAcC,OAAd;AACD;AACF,KAVD;;AAYA,SAAKa,yBAAL,GAAiC,YAAY;AAC3CnC,MAAAA,KAAK,CAACgC,0BAAN;;AAEAhC,MAAAA,KAAK,CAACM,kBAAN,GAA2B,EAA3B;AACD,KAJD;;AAMA,SAAK8B,kBAAL,GAA0B,UAAUC,CAAV,EAAa;AACrC,UAAIA,CAAC,CAACC,gBAAN,EAAwB;AACtB;AACD;;AAED,UAAIhC,kBAAkB,GAAGN,KAAK,CAACM,kBAA/B;AACAN,MAAAA,KAAK,CAACM,kBAAN,GAA2B,IAA3B;AACA,UAAIiC,YAAY,GAAGjD,oBAAoB,CAAC+C,CAAD,CAAvC,CAPqC,CAOO;;AAE5C,UAAIrC,KAAK,CAACiC,OAAN,CAAcC,UAAd,EAAJ,EAAgC;AAC9BlC,QAAAA,KAAK,CAACqB,OAAN,CAAcC,OAAd;AACD,OAXoC,CAWnC;;;AAGFtB,MAAAA,KAAK,CAACqB,OAAN,CAAcmB,SAAd,CAAwBlC,kBAAkB,IAAI,EAA9C,EAAkD;AAChDmC,QAAAA,aAAa,EAAE,KADiC;AAEhDzB,QAAAA,qBAAqB,EAAEhB,KAAK,CAACgB,qBAFmB;AAGhDuB,QAAAA,YAAY,EAAEA;AAHkC,OAAlD;;AAMA,UAAIG,YAAY,GAAGL,CAAC,CAACK,YAArB;AACA,UAAIC,UAAU,GAAGlD,mBAAmB,CAACiD,YAAD,CAApC;;AAEA,UAAI1C,KAAK,CAACiC,OAAN,CAAcC,UAAd,EAAJ,EAAgC;AAC9B,YAAIQ,YAAY,IAAI,OAAOA,YAAY,CAACE,YAApB,KAAqC,UAAzD,EAAqE;AACnE;AACA;AACA;AACA,cAAI3B,QAAQ,GAAGjB,KAAK,CAACiC,OAAN,CAAcY,WAAd,EAAf;;AAEA,cAAIC,UAAU,GAAG9C,KAAK,CAACI,WAAN,CAAkBc,GAAlB,CAAsBD,QAAtB,CAAjB;;AAEA,cAAI8B,WAAW,GAAG/C,KAAK,CAACC,kBAAN,CAAyBiB,GAAzB,CAA6BD,QAA7B,KAA0C6B,UAA5D;;AAEA,cAAIC,WAAJ,EAAiB;AACf,gBAAIC,qBAAqB,GAAGhD,KAAK,CAACiD,kCAAN,EAA5B;AAAA,gBACIC,OAAO,GAAGF,qBAAqB,CAACE,OADpC;AAAA,gBAEIC,OAAO,GAAGH,qBAAqB,CAACG,OAFpC;AAAA,gBAGIC,OAAO,GAAGJ,qBAAqB,CAACI,OAHpC;AAAA,gBAIIC,OAAO,GAAGL,qBAAqB,CAACK,OAJpC;;AAMA,gBAAIC,WAAW,GAAG;AAChBJ,cAAAA,OAAO,EAAEA,OADO;AAEhBC,cAAAA,OAAO,EAAEA;AAFO,aAAlB;AAIA,gBAAII,WAAW,GAAG;AAChBH,cAAAA,OAAO,EAAEA,OADO;AAEhBC,cAAAA,OAAO,EAAEA;AAFO,aAAlB;AAIA,gBAAIG,iBAAiB,GAAGjE,oBAAoB,CAACuD,UAAD,EAAaC,WAAb,EAA0BR,YAA1B,EAAwCe,WAAxC,EAAqDC,WAArD,CAA5C;AACAb,YAAAA,YAAY,CAACE,YAAb,CAA0BG,WAA1B,EAAuCS,iBAAiB,CAACC,CAAzD,EAA4DD,iBAAiB,CAACE,CAA9E;AACD;AACF;;AAED,YAAI;AACF;AACAhB,UAAAA,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACiB,OAAb,CAAqB,kBAArB,EAAyC,EAAzC,CAA5D;AACD,SAHD,CAGE,OAAOC,GAAP,EAAY,CAAC;AACd,SAnC6B,CAmC5B;AACF;;;AAGA5D,QAAAA,KAAK,CAAC6D,wBAAN,CAA+BxB,CAAC,CAAC3E,MAAjC,EAvC8B,CAuCY;;;AAG1C,YAAIoG,sBAAsB,GAAG9D,KAAK,CAACiD,kCAAN,EAA7B;AAAA,YACIc,oBAAoB,GAAGD,sBAAsB,CAACC,oBADlD;;AAGA,YAAI,CAACA,oBAAL,EAA2B;AACzB;AACA;AACA;AACA;AACA;AACAC,UAAAA,UAAU,CAAC,YAAY;AACrB,mBAAOhE,KAAK,CAACqB,OAAN,CAAc4C,iBAAd,EAAP;AACD,WAFS,EAEP,CAFO,CAAV;AAGD,SATD,MASO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAjE,UAAAA,KAAK,CAACqB,OAAN,CAAc4C,iBAAd;AACD;AACF,OAnED,MAmEO,IAAItB,UAAJ,EAAgB;AACrB;AACA3C,QAAAA,KAAK,CAACkE,mBAAN,CAA0BvB,UAA1B;AACD,OAHM,MAGA,IAAID,YAAY,IAAI,CAACA,YAAY,CAACyB,KAA9B,KAAwC9B,CAAC,CAAC3E,MAAF,IAAY,CAAC2E,CAAC,CAAC3E,MAAF,CAAS0G,YAAtB,IAAsC,CAAC/B,CAAC,CAAC3E,MAAF,CAAS0G,YAAT,CAAsB,WAAtB,CAA/E,CAAJ,EAAwH;AAC7H;AACA;AACA;AACA;AACD,OALM,MAKA;AACL;AACA/B,QAAAA,CAAC,CAACgC,cAAF;AACD;AACF,KAtGD;;AAwGA,SAAKC,uBAAL,GAA+B,YAAY;AACzC,UAAItE,KAAK,CAACgC,0BAAN,MAAsChC,KAAK,CAACiC,OAAN,CAAcC,UAAd,EAA1C,EAAsE;AACpE;AACA;AACA;AACAlC,QAAAA,KAAK,CAACqB,OAAN,CAAcC,OAAd;AACD;AACF,KAPD;;AASA,SAAKiD,yBAAL,GAAiC,UAAUlC,CAAV,EAAa;AAC5CrC,MAAAA,KAAK,CAACQ,kBAAN,GAA2B,EAA3B;;AAEA,UAAIgE,YAAY,GAAGxE,KAAK,CAACyE,iBAAN,CAAwBC,KAAxB,CAA8BrC,CAAC,CAAC3E,MAAhC,CAAnB;;AAEA,UAAI,CAAC8G,YAAD,IAAiBxE,KAAK,CAACiC,OAAN,CAAcC,UAAd,EAArB,EAAiD;AAC/C;AACD;;AAED,UAAIQ,YAAY,GAAGL,CAAC,CAACK,YAArB;AACA,UAAIC,UAAU,GAAGlD,mBAAmB,CAACiD,YAAD,CAApC;;AAEA,UAAIC,UAAJ,EAAgB;AACd;AACA3C,QAAAA,KAAK,CAACkE,mBAAN,CAA0BvB,UAA1B,EAAsCD,YAAtC;AACD;AACF,KAhBD;;AAkBA,SAAKiC,kBAAL,GAA0B,UAAUtC,CAAV,EAAa;AACrC,UAAI7B,kBAAkB,GAAGR,KAAK,CAACQ,kBAA/B;AACAR,MAAAA,KAAK,CAACQ,kBAAN,GAA2B,EAA3B;;AAEA,UAAI,CAACR,KAAK,CAACiC,OAAN,CAAcC,UAAd,EAAL,EAAiC;AAC/B;AACA;AACD;;AAEDlC,MAAAA,KAAK,CAACY,aAAN,GAAsByB,CAAC,CAACuC,MAAxB,CATqC,CASL;AAChC;AACA;;AAEA,UAAIpE,kBAAkB,CAAC3C,MAAnB,GAA4B,CAAhC,EAAmC;AACjCmC,QAAAA,KAAK,CAACqB,OAAN,CAAcwD,KAAd,CAAoBrE,kBAApB,EAAwC;AACtC+B,UAAAA,YAAY,EAAEjD,oBAAoB,CAAC+C,CAAD;AADI,SAAxC;AAGD;;AAED,UAAIyC,OAAO,GAAGtE,kBAAkB,CAACuE,IAAnB,CAAwB,UAAUC,QAAV,EAAoB;AACxD,eAAOhF,KAAK,CAACiC,OAAN,CAAcgD,eAAd,CAA8BD,QAA9B,CAAP;AACD,OAFa,CAAd;;AAIA,UAAIF,OAAJ,EAAa;AACX;AACAzC,QAAAA,CAAC,CAACgC,cAAF;;AAEA,YAAIhC,CAAC,CAACK,YAAN,EAAoB;AAClBL,UAAAA,CAAC,CAACK,YAAF,CAAewC,UAAf,GAA4BlF,KAAK,CAACmF,oBAAN,EAA5B;AACD;AACF;AACF,KA/BD;;AAiCA,SAAKC,wBAAL,GAAgC,YAAY;AAC1CpF,MAAAA,KAAK,CAACe,iBAAN,GAA0B,EAA1B;AACD,KAFD;;AAIA,SAAKsE,iBAAL,GAAyB,UAAUhD,CAAV,EAAa;AACpC,UAAItB,iBAAiB,GAAGf,KAAK,CAACe,iBAA9B;AACAf,MAAAA,KAAK,CAACe,iBAAN,GAA0B,EAA1B;;AAEA,UAAI,CAACf,KAAK,CAACiC,OAAN,CAAcC,UAAd,EAAL,EAAiC;AAC/B;AACA;AACAG,QAAAA,CAAC,CAACgC,cAAF;;AAEA,YAAIhC,CAAC,CAACK,YAAN,EAAoB;AAClBL,UAAAA,CAAC,CAACK,YAAF,CAAewC,UAAf,GAA4B,MAA5B;AACD;;AAED;AACD;;AAEDlF,MAAAA,KAAK,CAACY,aAAN,GAAsByB,CAAC,CAACuC,MAAxB;;AAEA5E,MAAAA,KAAK,CAACqB,OAAN,CAAcwD,KAAd,CAAoB9D,iBAAiB,IAAI,EAAzC,EAA6C;AAC3CwB,QAAAA,YAAY,EAAEjD,oBAAoB,CAAC+C,CAAD;AADS,OAA7C;;AAIA,UAAIyC,OAAO,GAAG,CAAC/D,iBAAiB,IAAI,EAAtB,EAA0BgE,IAA1B,CAA+B,UAAUC,QAAV,EAAoB;AAC/D,eAAOhF,KAAK,CAACiC,OAAN,CAAcgD,eAAd,CAA8BD,QAA9B,CAAP;AACD,OAFa,CAAd;;AAIA,UAAIF,OAAJ,EAAa;AACX;AACAzC,QAAAA,CAAC,CAACgC,cAAF;;AAEA,YAAIhC,CAAC,CAACK,YAAN,EAAoB;AAClBL,UAAAA,CAAC,CAACK,YAAF,CAAewC,UAAf,GAA4BlF,KAAK,CAACmF,oBAAN,EAA5B;AACD;AACF,OAPD,MAOO,IAAInF,KAAK,CAACoB,oBAAN,EAAJ,EAAkC;AACvC;AACA;AACAiB,QAAAA,CAAC,CAACgC,cAAF;AACD,OAJM,MAIA;AACLhC,QAAAA,CAAC,CAACgC,cAAF;;AAEA,YAAIhC,CAAC,CAACK,YAAN,EAAoB;AAClBL,UAAAA,CAAC,CAACK,YAAF,CAAewC,UAAf,GAA4B,MAA5B;AACD;AACF;AACF,KA5CD;;AA8CA,SAAKI,yBAAL,GAAiC,UAAUjD,CAAV,EAAa;AAC5C,UAAIrC,KAAK,CAACoB,oBAAN,EAAJ,EAAkC;AAChCiB,QAAAA,CAAC,CAACgC,cAAF;AACD;;AAED,UAAIkB,WAAW,GAAGvF,KAAK,CAACyE,iBAAN,CAAwBe,KAAxB,CAA8BnD,CAAC,CAAC3E,MAAhC,CAAlB;;AAEA,UAAI,CAAC6H,WAAL,EAAkB;AAChB;AACD;;AAED,UAAIvF,KAAK,CAACoB,oBAAN,EAAJ,EAAkC;AAChC4C,QAAAA,UAAU,CAAC,YAAY;AACrB,iBAAOhE,KAAK,CAACmB,iBAAN,EAAP;AACD,SAFS,EAEP,CAFO,CAAV;AAGD;AACF,KAhBD;;AAkBA,SAAKsE,oBAAL,GAA4B,UAAUpD,CAAV,EAAa;AACvCrC,MAAAA,KAAK,CAACO,aAAN,GAAsB,EAAtB;;AAEA,UAAIP,KAAK,CAACoB,oBAAN,EAAJ,EAAkC;AAChC,YAAIsE,qBAAJ;;AAEArD,QAAAA,CAAC,CAACgC,cAAF;AACA,SAACqB,qBAAqB,GAAG1F,KAAK,CAACS,mBAA/B,MAAwD,IAAxD,IAAgEiF,qBAAqB,KAAK,KAAK,CAA/F,GAAmG,KAAK,CAAxG,GAA4GA,qBAAqB,CAACC,gBAAtB,CAAuCtD,CAAC,CAACK,YAAzC,CAA5G;AACD;;AAED1C,MAAAA,KAAK,CAACyE,iBAAN,CAAwBmB,KAAxB;AACD,KAXD;;AAaA,SAAKC,aAAL,GAAqB,UAAUxD,CAAV,EAAa;AAChC,UAAI9B,aAAa,GAAGP,KAAK,CAACO,aAA1B;AACAP,MAAAA,KAAK,CAACO,aAAN,GAAsB,EAAtB;;AAEAP,MAAAA,KAAK,CAACqB,OAAN,CAAcwD,KAAd,CAAoBtE,aAApB,EAAmC;AACjCgC,QAAAA,YAAY,EAAEjD,oBAAoB,CAAC+C,CAAD;AADD,OAAnC;;AAIArC,MAAAA,KAAK,CAACqB,OAAN,CAAcyE,IAAd,CAAmB;AACjBZ,QAAAA,UAAU,EAAElF,KAAK,CAACmF,oBAAN;AADK,OAAnB;;AAIA,UAAInF,KAAK,CAACoB,oBAAN,EAAJ,EAAkC;AAChCpB,QAAAA,KAAK,CAACmB,iBAAN;AACD,OAFD,MAEO,IAAInB,KAAK,CAACiC,OAAN,CAAcC,UAAd,EAAJ,EAAgC;AACrClC,QAAAA,KAAK,CAACqB,OAAN,CAAcC,OAAd;AACD;AACF,KAjBD;;AAmBA,SAAKyE,iBAAL,GAAyB,UAAU1D,CAAV,EAAa;AACpC,UAAI3E,MAAM,GAAG2E,CAAC,CAAC3E,MAAf,CADoC,CACb;AACvB;;AAEA,UAAI,OAAOA,MAAM,CAACsI,QAAd,KAA2B,UAA/B,EAA2C;AACzC;AACD,OANmC,CAMlC;;;AAGF,UAAItI,MAAM,CAACuI,OAAP,KAAmB,OAAnB,IAA8BvI,MAAM,CAACuI,OAAP,KAAmB,QAAjD,IAA6DvI,MAAM,CAACuI,OAAP,KAAmB,UAAhF,IAA8FvI,MAAM,CAACwI,iBAAzG,EAA4H;AAC1H;AACD,OAXmC,CAWlC;AACF;;;AAGA7D,MAAAA,CAAC,CAACgC,cAAF;AACA3G,MAAAA,MAAM,CAACsI,QAAP;AACD,KAjBD;;AAmBA,SAAKjG,OAAL,GAAe,IAAIJ,aAAJ,CAAkBG,aAAlB,EAAiCC,OAAjC,CAAf;AACA,SAAKsB,OAAL,GAAexB,OAAO,CAACsG,UAAR,EAAf;AACA,SAAKlE,OAAL,GAAepC,OAAO,CAACuG,UAAR,EAAf;AACA,SAAK7E,QAAL,GAAgB1B,OAAO,CAACwG,WAAR,EAAhB;AACA,SAAK5B,iBAAL,GAAyB,IAAIrF,iBAAJ,CAAsB,KAAKqC,gBAA3B,CAAzB;AACD;AACD;AACF;AACA;;;AAGEzC,EAAAA,YAAY,CAACY,gBAAD,EAAmB,CAAC;AAC9B5B,IAAAA,GAAG,EAAE,SADyB;AAE9BM,IAAAA,KAAK,EAAE,SAASgI,OAAT,GAAmB;AACxB,UAAIC,qBAAJ,EAA2BC,qBAA3B;;AAEA,aAAO;AACLvG,QAAAA,kBAAkB,EAAE,KAAKA,kBAAL,CAAwBwG,IADvC;AAELtG,QAAAA,wBAAwB,EAAE,KAAKA,wBAAL,CAA8BsG,IAFnD;AAGLpG,QAAAA,iBAAiB,EAAE,KAAKA,iBAAL,CAAuBoG,IAHrC;AAILrG,QAAAA,WAAW,EAAE,KAAKA,WAAL,CAAiBqG,IAJzB;AAKLnG,QAAAA,kBAAkB,EAAE,CAAC,CAACiG,qBAAqB,GAAG,KAAKjG,kBAA9B,MAAsD,IAAtD,IAA8DiG,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAAC1I,MAAjI,KAA4I,CAL3J;AAML0C,QAAAA,aAAa,EAAE,KAAKA,aAAL,CAAmB1C,MAN7B;AAOL2C,QAAAA,kBAAkB,EAAE,KAAKA,kBAAL,CAAwB3C,MAPvC;AAQLkD,QAAAA,iBAAiB,EAAE,CAAC,CAACyF,qBAAqB,GAAG,KAAKzF,iBAA9B,MAAqD,IAArD,IAA6DyF,qBAAqB,KAAK,KAAK,CAA5F,GAAgG,KAAK,CAArG,GAAyGA,qBAAqB,CAAC3I,MAAhI,KAA2I;AARzJ,OAAP;AAUD,KAf6B,CAe5B;;AAf4B,GAAD,EAiB5B;AACDG,IAAAA,GAAG,EAAE,QADJ;AAEDkD,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAO,KAAKnB,OAAL,CAAa2G,MAApB;AACD;AAJA,GAjB4B,EAsB5B;AACD1I,IAAAA,GAAG,EAAE,UADJ;AAEDkD,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAO,KAAKnB,OAAL,CAAa6B,QAApB;AACD;AACD;AACJ;AACA;;AAPK,GAtB4B,EA+B5B;AACD5D,IAAAA,GAAG,EAAE,aADJ;AAEDkD,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAO,KAAKnB,OAAL,CAAa4G,WAApB;AACD;AAJA,GA/B4B,EAoC5B;AACD3I,IAAAA,GAAG,EAAE,OADJ;AAEDM,IAAAA,KAAK,EAAE,SAASsI,KAAT,GAAiB;AACtB,UAAIC,IAAI,GAAG,KAAKF,WAAhB;;AAEA,UAAIE,IAAI,KAAKC,SAAb,EAAwB;AACtB;AACD;;AAED,UAAID,IAAI,CAACE,wBAAT,EAAmC;AACjC,cAAM,IAAIC,KAAJ,CAAU,kDAAV,CAAN;AACD;;AAEDH,MAAAA,IAAI,CAACE,wBAAL,GAAgC,IAAhC;AACA,WAAKE,iBAAL,CAAuBJ,IAAvB;AACD;AAfA,GApC4B,EAoD5B;AACD7I,IAAAA,GAAG,EAAE,UADJ;AAEDM,IAAAA,KAAK,EAAE,SAAS4I,QAAT,GAAoB;AACzB,UAAIL,IAAI,GAAG,KAAKF,WAAhB;;AAEA,UAAIE,IAAI,KAAKC,SAAb,EAAwB;AACtB;AACD;;AAEDD,MAAAA,IAAI,CAACE,wBAAL,GAAgC,KAAhC;AACA,WAAKI,oBAAL,CAA0B,KAAKR,WAA/B;AACA,WAAK3E,0BAAL;;AAEA,UAAI,KAAKlB,mBAAT,EAA8B;AAC5B,YAAIsG,YAAJ;;AAEA,SAACA,YAAY,GAAG,KAAKV,MAArB,MAAiC,IAAjC,IAAyCU,YAAY,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4EA,YAAY,CAACC,oBAAb,CAAkC,KAAKvG,mBAAvC,CAA5E;AACD;AACF;AAlBA,GApD4B,EAuE5B;AACD9C,IAAAA,GAAG,EAAE,oBADJ;AAEDM,IAAAA,KAAK,EAAE,SAASgJ,kBAAT,CAA4BrG,QAA5B,EAAsCS,IAAtC,EAA4C3B,OAA5C,EAAqD;AAC1D,UAAIwH,MAAM,GAAG,IAAb;;AAEA,WAAKpH,wBAAL,CAA8BqH,GAA9B,CAAkCvG,QAAlC,EAA4ClB,OAA5C;AACA,WAAKE,kBAAL,CAAwBuH,GAAxB,CAA4BvG,QAA5B,EAAsCS,IAAtC;AACA,aAAO,YAAY;AACjB6F,QAAAA,MAAM,CAACtH,kBAAP,CAA0BwH,MAA1B,CAAiCxG,QAAjC;;AAEAsG,QAAAA,MAAM,CAACpH,wBAAP,CAAgCsH,MAAhC,CAAuCxG,QAAvC;AACD,OAJD;AAKD;AAZA,GAvE4B,EAoF5B;AACDjD,IAAAA,GAAG,EAAE,mBADJ;AAEDM,IAAAA,KAAK,EAAE,SAASoJ,iBAAT,CAA2BzG,QAA3B,EAAqCS,IAArC,EAA2C3B,OAA3C,EAAoD;AACzD,UAAI4H,MAAM,GAAG,IAAb;;AAEA,WAAKvH,WAAL,CAAiBoH,GAAjB,CAAqBvG,QAArB,EAA+BS,IAA/B;AACA,WAAKrB,iBAAL,CAAuBmH,GAAvB,CAA2BvG,QAA3B,EAAqClB,OAArC;;AAEA,UAAI6H,eAAe,GAAG,SAASA,eAAT,CAAyBvF,CAAzB,EAA4B;AAChD,eAAOsF,MAAM,CAACC,eAAP,CAAuBvF,CAAvB,EAA0BpB,QAA1B,CAAP;AACD,OAFD;;AAIA,UAAI8E,iBAAiB,GAAG,SAASA,iBAAT,CAA2B1D,CAA3B,EAA8B;AACpD,eAAOsF,MAAM,CAAC5B,iBAAP,CAAyB1D,CAAzB,CAAP;AACD,OAFD;;AAIAX,MAAAA,IAAI,CAACmG,YAAL,CAAkB,WAAlB,EAA+B,MAA/B;AACAnG,MAAAA,IAAI,CAACoG,gBAAL,CAAsB,WAAtB,EAAmCF,eAAnC;AACAlG,MAAAA,IAAI,CAACoG,gBAAL,CAAsB,aAAtB,EAAqC/B,iBAArC;AACA,aAAO,YAAY;AACjB4B,QAAAA,MAAM,CAACvH,WAAP,CAAmBqH,MAAnB,CAA0BxG,QAA1B;;AAEA0G,QAAAA,MAAM,CAACtH,iBAAP,CAAyBoH,MAAzB,CAAgCxG,QAAhC;;AAEAS,QAAAA,IAAI,CAACqG,mBAAL,CAAyB,WAAzB,EAAsCH,eAAtC;AACAlG,QAAAA,IAAI,CAACqG,mBAAL,CAAyB,aAAzB,EAAwChC,iBAAxC;AACArE,QAAAA,IAAI,CAACmG,YAAL,CAAkB,WAAlB,EAA+B,OAA/B;AACD,OARD;AASD;AA5BA,GApF4B,EAiH5B;AACD7J,IAAAA,GAAG,EAAE,mBADJ;AAEDM,IAAAA,KAAK,EAAE,SAAS0J,iBAAT,CAA2BhD,QAA3B,EAAqCtD,IAArC,EAA2C;AAChD,UAAIuG,MAAM,GAAG,IAAb;;AAEA,UAAIC,eAAe,GAAG,SAASA,eAAT,CAAyB7F,CAAzB,EAA4B;AAChD,eAAO4F,MAAM,CAACC,eAAP,CAAuB7F,CAAvB,EAA0B2C,QAA1B,CAAP;AACD,OAFD;;AAIA,UAAImD,cAAc,GAAG,SAASA,cAAT,CAAwB9F,CAAxB,EAA2B;AAC9C,eAAO4F,MAAM,CAACE,cAAP,CAAsB9F,CAAtB,EAAyB2C,QAAzB,CAAP;AACD,OAFD;;AAIA,UAAIoD,UAAU,GAAG,SAASA,UAAT,CAAoB/F,CAApB,EAAuB;AACtC,eAAO4F,MAAM,CAACG,UAAP,CAAkB/F,CAAlB,EAAqB2C,QAArB,CAAP;AACD,OAFD;;AAIAtD,MAAAA,IAAI,CAACoG,gBAAL,CAAsB,WAAtB,EAAmCI,eAAnC;AACAxG,MAAAA,IAAI,CAACoG,gBAAL,CAAsB,UAAtB,EAAkCK,cAAlC;AACAzG,MAAAA,IAAI,CAACoG,gBAAL,CAAsB,MAAtB,EAA8BM,UAA9B;AACA,aAAO,YAAY;AACjB1G,QAAAA,IAAI,CAACqG,mBAAL,CAAyB,WAAzB,EAAsCG,eAAtC;AACAxG,QAAAA,IAAI,CAACqG,mBAAL,CAAyB,UAAzB,EAAqCI,cAArC;AACAzG,QAAAA,IAAI,CAACqG,mBAAL,CAAyB,MAAzB,EAAiCK,UAAjC;AACD,OAJD;AAKD;AAzBA,GAjH4B,EA2I5B;AACDpK,IAAAA,GAAG,EAAE,mBADJ;AAEDM,IAAAA,KAAK,EAAE,SAAS2I,iBAAT,CAA2BvJ,MAA3B,EAAmC;AACxC;AACA,UAAI,CAACA,MAAM,CAACoK,gBAAZ,EAA8B;AAC5B;AACD;;AAEDpK,MAAAA,MAAM,CAACoK,gBAAP,CAAwB,WAAxB,EAAqC,KAAK1F,kBAA1C;AACA1E,MAAAA,MAAM,CAACoK,gBAAP,CAAwB,WAAxB,EAAqC,KAAK3F,yBAA1C,EAAqE,IAArE;AACAzE,MAAAA,MAAM,CAACoK,gBAAP,CAAwB,SAAxB,EAAmC,KAAKxD,uBAAxC,EAAiE,IAAjE;AACA5G,MAAAA,MAAM,CAACoK,gBAAP,CAAwB,WAAxB,EAAqC,KAAKnD,kBAA1C;AACAjH,MAAAA,MAAM,CAACoK,gBAAP,CAAwB,WAAxB,EAAqC,KAAKvD,yBAA1C,EAAqE,IAArE;AACA7G,MAAAA,MAAM,CAACoK,gBAAP,CAAwB,WAAxB,EAAqC,KAAKxC,yBAA1C,EAAqE,IAArE;AACA5H,MAAAA,MAAM,CAACoK,gBAAP,CAAwB,UAAxB,EAAoC,KAAKzC,iBAAzC;AACA3H,MAAAA,MAAM,CAACoK,gBAAP,CAAwB,UAAxB,EAAoC,KAAK1C,wBAAzC,EAAmE,IAAnE;AACA1H,MAAAA,MAAM,CAACoK,gBAAP,CAAwB,MAAxB,EAAgC,KAAKjC,aAArC;AACAnI,MAAAA,MAAM,CAACoK,gBAAP,CAAwB,MAAxB,EAAgC,KAAKrC,oBAArC,EAA2D,IAA3D;AACD;AAlBA,GA3I4B,EA8J5B;AACDzH,IAAAA,GAAG,EAAE,sBADJ;AAEDM,IAAAA,KAAK,EAAE,SAAS6I,oBAAT,CAA8BzJ,MAA9B,EAAsC;AAC3C;AACA,UAAI,CAACA,MAAM,CAACqK,mBAAZ,EAAiC;AAC/B;AACD;;AAEDrK,MAAAA,MAAM,CAACqK,mBAAP,CAA2B,WAA3B,EAAwC,KAAK3F,kBAA7C;AACA1E,MAAAA,MAAM,CAACqK,mBAAP,CAA2B,WAA3B,EAAwC,KAAK5F,yBAA7C,EAAwE,IAAxE;AACAzE,MAAAA,MAAM,CAACqK,mBAAP,CAA2B,SAA3B,EAAsC,KAAKzD,uBAA3C,EAAoE,IAApE;AACA5G,MAAAA,MAAM,CAACqK,mBAAP,CAA2B,WAA3B,EAAwC,KAAKpD,kBAA7C;AACAjH,MAAAA,MAAM,CAACqK,mBAAP,CAA2B,WAA3B,EAAwC,KAAKxD,yBAA7C,EAAwE,IAAxE;AACA7G,MAAAA,MAAM,CAACqK,mBAAP,CAA2B,WAA3B,EAAwC,KAAKzC,yBAA7C,EAAwE,IAAxE;AACA5H,MAAAA,MAAM,CAACqK,mBAAP,CAA2B,UAA3B,EAAuC,KAAK1C,iBAA5C;AACA3H,MAAAA,MAAM,CAACqK,mBAAP,CAA2B,UAA3B,EAAuC,KAAK3C,wBAA5C,EAAsE,IAAtE;AACA1H,MAAAA,MAAM,CAACqK,mBAAP,CAA2B,MAA3B,EAAmC,KAAKlC,aAAxC;AACAnI,MAAAA,MAAM,CAACqK,mBAAP,CAA2B,MAA3B,EAAmC,KAAKtC,oBAAxC,EAA8D,IAA9D;AACD;AAlBA,GA9J4B,EAiL5B;AACDzH,IAAAA,GAAG,EAAE,6BADJ;AAEDM,IAAAA,KAAK,EAAE,SAAS+J,2BAAT,GAAuC;AAC5C,UAAIpH,QAAQ,GAAG,KAAKgB,OAAL,CAAaY,WAAb,EAAf;AACA,UAAIxC,iBAAiB,GAAG,KAAKA,iBAAL,CAAuBa,GAAvB,CAA2BD,QAA3B,CAAxB;AACA,aAAOxD,aAAa,CAAC;AACnByH,QAAAA,UAAU,EAAE,KAAKtE,aAAL,GAAqB,MAArB,GAA8B;AADvB,OAAD,EAEjBP,iBAAiB,IAAI,EAFJ,CAApB;AAGD;AARA,GAjL4B,EA0L5B;AACDrC,IAAAA,GAAG,EAAE,sBADJ;AAEDM,IAAAA,KAAK,EAAE,SAAS6G,oBAAT,GAAgC;AACrC,UAAI,KAAK/D,oBAAL,EAAJ,EAAiC;AAC/B;AACA,eAAO,MAAP;AACD;;AAED,aAAO,KAAKiH,2BAAL,GAAmCnD,UAA1C;AACD;AATA,GA1L4B,EAoM5B;AACDlH,IAAAA,GAAG,EAAE,oCADJ;AAEDM,IAAAA,KAAK,EAAE,SAAS2E,kCAAT,GAA8C;AACnD,UAAIhC,QAAQ,GAAG,KAAKgB,OAAL,CAAaY,WAAb,EAAf;AACA,UAAI1C,wBAAwB,GAAG,KAAKA,wBAAL,CAA8Be,GAA9B,CAAkCD,QAAlC,CAA/B;AACA,aAAOxD,aAAa,CAAC;AACnByF,QAAAA,OAAO,EAAE,GADU;AAEnBC,QAAAA,OAAO,EAAE,GAFU;AAGnBY,QAAAA,oBAAoB,EAAE;AAHH,OAAD,EAIjB5D,wBAAwB,IAAI,EAJX,CAApB;AAKD;AAVA,GApM4B,EA+M5B;AACDnC,IAAAA,GAAG,EAAE,sBADJ;AAEDM,IAAAA,KAAK,EAAE,SAAS8C,oBAAT,GAAgC;AACrC,UAAIkH,QAAQ,GAAG,KAAKrG,OAAL,CAAasG,WAAb,EAAf;AACA,aAAOvL,MAAM,CAACD,IAAP,CAAY2C,WAAZ,EAAyBqF,IAAzB,CAA8B,UAAU/G,GAAV,EAAe;AAClD,eAAO0B,WAAW,CAAC1B,GAAD,CAAX,KAAqBsK,QAA5B;AACD,OAFM,CAAP;AAGD;AAPA,GA/M4B,EAuN5B;AACDtK,IAAAA,GAAG,EAAE,qBADJ;AAEDM,IAAAA,KAAK,EAAE,SAAS4F,mBAAT,CAA6BsE,IAA7B,EAAmC9F,YAAnC,EAAiD;AACtD,WAAKV,0BAAL;AACA,WAAKvB,mBAAL,GAA2BjB,sBAAsB,CAACgJ,IAAD,EAAO9F,YAAP,CAAjD;AACA,WAAKhC,mBAAL,GAA2B,KAAKa,QAAL,CAAckH,SAAd,CAAwBD,IAAxB,EAA8B,KAAK/H,mBAAnC,CAA3B;AACA,WAAKY,OAAL,CAAamB,SAAb,CAAuB,CAAC,KAAK9B,mBAAN,CAAvB;AACD;AAPA,GAvN4B,EA+N5B;AACD1C,IAAAA,GAAG,EAAE,0BADJ;AAEDM,IAAAA,KAAK,EAAE,SAASuF,wBAAT,CAAkCnC,IAAlC,EAAwC;AAC7C,UAAIgH,MAAM,GAAG,IAAb;;AAEA,WAAK1G,0BAAL;AACA,WAAKrB,qBAAL,GAA6Be,IAA7B,CAJ6C,CAIV;AACnC;AACA;AACA;;AAEA,UAAIiH,kBAAkB,GAAG,IAAzB,CAT6C,CASd;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAK9H,qBAAL,GAA6BmD,UAAU,CAAC,YAAY;AAClD,YAAI4E,kBAAJ;;AAEA,eAAO,CAACA,kBAAkB,GAAGF,MAAM,CAAC/B,WAA7B,MAA8C,IAA9C,IAAsDiC,kBAAkB,KAAK,KAAK,CAAlF,GAAsF,KAAK,CAA3F,GAA+FA,kBAAkB,CAACd,gBAAnB,CAAoC,WAApC,EAAiDY,MAAM,CAAC3G,gCAAxD,EAA0F,IAA1F,CAAtG;AACD,OAJsC,EAIpC4G,kBAJoC,CAAvC;AAKD;AA7BA,GA/N4B,EA6P5B;AACD3K,IAAAA,GAAG,EAAE,4BADJ;AAEDM,IAAAA,KAAK,EAAE,SAAS0D,0BAAT,GAAsC;AAC3C,UAAI,KAAKrB,qBAAT,EAAgC;AAC9B,aAAKA,qBAAL,GAA6B,IAA7B;;AAEA,YAAI,KAAKgG,WAAT,EAAsB;AACpB,cAAIkC,aAAJ;;AAEA,WAACA,aAAa,GAAG,KAAKnC,MAAtB,MAAkC,IAAlC,IAA0CmC,aAAa,KAAK,KAAK,CAAjE,GAAqE,KAAK,CAA1E,GAA8EA,aAAa,CAACC,YAAd,CAA2B,KAAKjI,qBAAL,IAA8BiG,SAAzD,CAA9E;AACA,eAAKH,WAAL,CAAiBoB,mBAAjB,CAAqC,WAArC,EAAkD,KAAKhG,gCAAvD,EAAyF,IAAzF;AACD;;AAED,aAAKlB,qBAAL,GAA6B,IAA7B;AACA,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD;AAlBA,GA7P4B,EAgR5B;AACD7C,IAAAA,GAAG,EAAE,iBADJ;AAEDM,IAAAA,KAAK,EAAE,SAASsJ,eAAT,CAAyBvF,CAAzB,EAA4BpB,QAA5B,EAAsC;AAC3C,UAAIoB,CAAC,CAACC,gBAAN,EAAwB;AACtB;AACD;;AAED,UAAI,CAAC,KAAKhC,kBAAV,EAA8B;AAC5B,aAAKA,kBAAL,GAA0B,EAA1B;AACD;;AAED,WAAKA,kBAAL,CAAwByI,OAAxB,CAAgC9H,QAAhC;AACD;AAZA,GAhR4B,EA6R5B;AACDjD,IAAAA,GAAG,EAAE,iBADJ;AAEDM,IAAAA,KAAK,EAAE,SAAS4J,eAAT,CAAyB7F,CAAzB,EAA4B2C,QAA5B,EAAsC;AAC3C,WAAKxE,kBAAL,CAAwBuI,OAAxB,CAAgC/D,QAAhC;AACD;AAJA,GA7R4B,EAkS5B;AACDhH,IAAAA,GAAG,EAAE,gBADJ;AAEDM,IAAAA,KAAK,EAAE,SAAS6J,cAAT,CAAwB9F,CAAxB,EAA2B2C,QAA3B,EAAqC;AAC1C,UAAI,KAAKjE,iBAAL,KAA2B,IAA/B,EAAqC;AACnC,aAAKA,iBAAL,GAAyB,EAAzB;AACD;;AAED,WAAKA,iBAAL,CAAuBgI,OAAvB,CAA+B/D,QAA/B;AACD;AARA,GAlS4B,EA2S5B;AACDhH,IAAAA,GAAG,EAAE,YADJ;AAEDM,IAAAA,KAAK,EAAE,SAAS8J,UAAT,CAAoB/F,CAApB,EAAuB2C,QAAvB,EAAiC;AACtC,WAAKzE,aAAL,CAAmBwI,OAAnB,CAA2B/D,QAA3B;AACD;AAJA,GA3S4B,CAAnB,CAAZ;;AAkTA,SAAOpF,gBAAP;AACD,CA1pB0C,EAApC","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter';\nimport { getNodeClientOffset, getEventClientOffset, getDragPreviewOffset } from './OffsetUtils';\nimport { createNativeDragSource, matchNativeItemType } from './NativeDragSources';\nimport * as NativeTypes from './NativeTypes';\nimport { OptionsReader } from './OptionsReader';\nexport var HTML5BackendImpl = /*#__PURE__*/function () {\n  function HTML5BackendImpl(manager, globalContext, options) {\n    var _this = this;\n\n    _classCallCheck(this, HTML5BackendImpl);\n\n    this.sourcePreviewNodes = new Map();\n    this.sourcePreviewNodeOptions = new Map();\n    this.sourceNodes = new Map();\n    this.sourceNodeOptions = new Map();\n    this.dragStartSourceIds = null;\n    this.dropTargetIds = [];\n    this.dragEnterTargetIds = [];\n    this.currentNativeSource = null;\n    this.currentNativeHandle = null;\n    this.currentDragSourceNode = null;\n    this.altKeyPressed = false;\n    this.mouseMoveTimeoutTimer = null;\n    this.asyncEndDragFrameId = null;\n    this.dragOverTargetIds = null;\n\n    this.getSourceClientOffset = function (sourceId) {\n      var source = _this.sourceNodes.get(sourceId);\n\n      return source && getNodeClientOffset(source) || null;\n    };\n\n    this.endDragNativeItem = function () {\n      if (!_this.isDraggingNativeItem()) {\n        return;\n      }\n\n      _this.actions.endDrag();\n\n      if (_this.currentNativeHandle) {\n        _this.registry.removeSource(_this.currentNativeHandle);\n      }\n\n      _this.currentNativeHandle = null;\n      _this.currentNativeSource = null;\n    };\n\n    this.isNodeInDocument = function (node) {\n      // Check the node either in the main document or in the current context\n      return Boolean(node && _this.document && _this.document.body && document.body.contains(node));\n    };\n\n    this.endDragIfSourceWasRemovedFromDOM = function () {\n      var node = _this.currentDragSourceNode;\n\n      if (node == null || _this.isNodeInDocument(node)) {\n        return;\n      }\n\n      if (_this.clearCurrentDragSourceNode() && _this.monitor.isDragging()) {\n        _this.actions.endDrag();\n      }\n    };\n\n    this.handleTopDragStartCapture = function () {\n      _this.clearCurrentDragSourceNode();\n\n      _this.dragStartSourceIds = [];\n    };\n\n    this.handleTopDragStart = function (e) {\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      var dragStartSourceIds = _this.dragStartSourceIds;\n      _this.dragStartSourceIds = null;\n      var clientOffset = getEventClientOffset(e); // Avoid crashing if we missed a drop event or our previous drag died\n\n      if (_this.monitor.isDragging()) {\n        _this.actions.endDrag();\n      } // Don't publish the source just yet (see why below)\n\n\n      _this.actions.beginDrag(dragStartSourceIds || [], {\n        publishSource: false,\n        getSourceClientOffset: _this.getSourceClientOffset,\n        clientOffset: clientOffset\n      });\n\n      var dataTransfer = e.dataTransfer;\n      var nativeType = matchNativeItemType(dataTransfer);\n\n      if (_this.monitor.isDragging()) {\n        if (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n          // Use custom drag image if user specifies it.\n          // If child drag source refuses drag but parent agrees,\n          // use parent's node as drag image. Neither works in IE though.\n          var sourceId = _this.monitor.getSourceId();\n\n          var sourceNode = _this.sourceNodes.get(sourceId);\n\n          var dragPreview = _this.sourcePreviewNodes.get(sourceId) || sourceNode;\n\n          if (dragPreview) {\n            var _this$getCurrentSourc = _this.getCurrentSourcePreviewNodeOptions(),\n                anchorX = _this$getCurrentSourc.anchorX,\n                anchorY = _this$getCurrentSourc.anchorY,\n                offsetX = _this$getCurrentSourc.offsetX,\n                offsetY = _this$getCurrentSourc.offsetY;\n\n            var anchorPoint = {\n              anchorX: anchorX,\n              anchorY: anchorY\n            };\n            var offsetPoint = {\n              offsetX: offsetX,\n              offsetY: offsetY\n            };\n            var dragPreviewOffset = getDragPreviewOffset(sourceNode, dragPreview, clientOffset, anchorPoint, offsetPoint);\n            dataTransfer.setDragImage(dragPreview, dragPreviewOffset.x, dragPreviewOffset.y);\n          }\n        }\n\n        try {\n          // Firefox won't drag without setting data\n          dataTransfer === null || dataTransfer === void 0 ? void 0 : dataTransfer.setData('application/json', {});\n        } catch (err) {// IE doesn't support MIME types in setData\n        } // Store drag source node so we can check whether\n        // it is removed from DOM and trigger endDrag manually.\n\n\n        _this.setCurrentDragSourceNode(e.target); // Now we are ready to publish the drag source.. or are we not?\n\n\n        var _this$getCurrentSourc2 = _this.getCurrentSourcePreviewNodeOptions(),\n            captureDraggingState = _this$getCurrentSourc2.captureDraggingState;\n\n        if (!captureDraggingState) {\n          // Usually we want to publish it in the next tick so that browser\n          // is able to screenshot the current (not yet dragging) state.\n          //\n          // It also neatly avoids a situation where render() returns null\n          // in the same tick for the source element, and browser freaks out.\n          setTimeout(function () {\n            return _this.actions.publishDragSource();\n          }, 0);\n        } else {\n          // In some cases the user may want to override this behavior, e.g.\n          // to work around IE not supporting custom drag previews.\n          //\n          // When using a custom drag layer, the only way to prevent\n          // the default drag preview from drawing in IE is to screenshot\n          // the dragging state in which the node itself has zero opacity\n          // and height. In this case, though, returning null from render()\n          // will abruptly end the dragging, which is not obvious.\n          //\n          // This is the reason such behavior is strictly opt-in.\n          _this.actions.publishDragSource();\n        }\n      } else if (nativeType) {\n        // A native item (such as URL) dragged from inside the document\n        _this.beginDragNativeItem(nativeType);\n      } else if (dataTransfer && !dataTransfer.types && (e.target && !e.target.hasAttribute || !e.target.hasAttribute('draggable'))) {\n        // Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n        // Just let it drag. It's a native type (URL or text) and will be picked up in\n        // dragenter handler.\n        return;\n      } else {\n        // If by this time no drag source reacted, tell browser not to drag.\n        e.preventDefault();\n      }\n    };\n\n    this.handleTopDragEndCapture = function () {\n      if (_this.clearCurrentDragSourceNode() && _this.monitor.isDragging()) {\n        // Firefox can dispatch this event in an infinite loop\n        // if dragend handler does something like showing an alert.\n        // Only proceed if we have not handled it already.\n        _this.actions.endDrag();\n      }\n    };\n\n    this.handleTopDragEnterCapture = function (e) {\n      _this.dragEnterTargetIds = [];\n\n      var isFirstEnter = _this.enterLeaveCounter.enter(e.target);\n\n      if (!isFirstEnter || _this.monitor.isDragging()) {\n        return;\n      }\n\n      var dataTransfer = e.dataTransfer;\n      var nativeType = matchNativeItemType(dataTransfer);\n\n      if (nativeType) {\n        // A native item (such as file or URL) dragged from outside the document\n        _this.beginDragNativeItem(nativeType, dataTransfer);\n      }\n    };\n\n    this.handleTopDragEnter = function (e) {\n      var dragEnterTargetIds = _this.dragEnterTargetIds;\n      _this.dragEnterTargetIds = [];\n\n      if (!_this.monitor.isDragging()) {\n        // This is probably a native item type we don't understand.\n        return;\n      }\n\n      _this.altKeyPressed = e.altKey; // If the target changes position as the result of `dragenter`, `dragover` might still\n      // get dispatched despite target being no longer there. The easy solution is to check\n      // whether there actually is a target before firing `hover`.\n\n      if (dragEnterTargetIds.length > 0) {\n        _this.actions.hover(dragEnterTargetIds, {\n          clientOffset: getEventClientOffset(e)\n        });\n      }\n\n      var canDrop = dragEnterTargetIds.some(function (targetId) {\n        return _this.monitor.canDropOnTarget(targetId);\n      });\n\n      if (canDrop) {\n        // IE requires this to fire dragover events\n        e.preventDefault();\n\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = _this.getCurrentDropEffect();\n        }\n      }\n    };\n\n    this.handleTopDragOverCapture = function () {\n      _this.dragOverTargetIds = [];\n    };\n\n    this.handleTopDragOver = function (e) {\n      var dragOverTargetIds = _this.dragOverTargetIds;\n      _this.dragOverTargetIds = [];\n\n      if (!_this.monitor.isDragging()) {\n        // This is probably a native item type we don't understand.\n        // Prevent default \"drop and blow away the whole document\" action.\n        e.preventDefault();\n\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = 'none';\n        }\n\n        return;\n      }\n\n      _this.altKeyPressed = e.altKey;\n\n      _this.actions.hover(dragOverTargetIds || [], {\n        clientOffset: getEventClientOffset(e)\n      });\n\n      var canDrop = (dragOverTargetIds || []).some(function (targetId) {\n        return _this.monitor.canDropOnTarget(targetId);\n      });\n\n      if (canDrop) {\n        // Show user-specified drop effect.\n        e.preventDefault();\n\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = _this.getCurrentDropEffect();\n        }\n      } else if (_this.isDraggingNativeItem()) {\n        // Don't show a nice cursor but still prevent default\n        // \"drop and blow away the whole document\" action.\n        e.preventDefault();\n      } else {\n        e.preventDefault();\n\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = 'none';\n        }\n      }\n    };\n\n    this.handleTopDragLeaveCapture = function (e) {\n      if (_this.isDraggingNativeItem()) {\n        e.preventDefault();\n      }\n\n      var isLastLeave = _this.enterLeaveCounter.leave(e.target);\n\n      if (!isLastLeave) {\n        return;\n      }\n\n      if (_this.isDraggingNativeItem()) {\n        setTimeout(function () {\n          return _this.endDragNativeItem();\n        }, 0);\n      }\n    };\n\n    this.handleTopDropCapture = function (e) {\n      _this.dropTargetIds = [];\n\n      if (_this.isDraggingNativeItem()) {\n        var _this$currentNativeSo;\n\n        e.preventDefault();\n        (_this$currentNativeSo = _this.currentNativeSource) === null || _this$currentNativeSo === void 0 ? void 0 : _this$currentNativeSo.loadDataTransfer(e.dataTransfer);\n      }\n\n      _this.enterLeaveCounter.reset();\n    };\n\n    this.handleTopDrop = function (e) {\n      var dropTargetIds = _this.dropTargetIds;\n      _this.dropTargetIds = [];\n\n      _this.actions.hover(dropTargetIds, {\n        clientOffset: getEventClientOffset(e)\n      });\n\n      _this.actions.drop({\n        dropEffect: _this.getCurrentDropEffect()\n      });\n\n      if (_this.isDraggingNativeItem()) {\n        _this.endDragNativeItem();\n      } else if (_this.monitor.isDragging()) {\n        _this.actions.endDrag();\n      }\n    };\n\n    this.handleSelectStart = function (e) {\n      var target = e.target; // Only IE requires us to explicitly say\n      // we want drag drop operation to start\n\n      if (typeof target.dragDrop !== 'function') {\n        return;\n      } // Inputs and textareas should be selectable\n\n\n      if (target.tagName === 'INPUT' || target.tagName === 'SELECT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n        return;\n      } // For other targets, ask IE\n      // to enable drag and drop\n\n\n      e.preventDefault();\n      target.dragDrop();\n    };\n\n    this.options = new OptionsReader(globalContext, options);\n    this.actions = manager.getActions();\n    this.monitor = manager.getMonitor();\n    this.registry = manager.getRegistry();\n    this.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument);\n  }\n  /**\n   * Generate profiling statistics for the HTML5Backend.\n   */\n\n\n  _createClass(HTML5BackendImpl, [{\n    key: \"profile\",\n    value: function profile() {\n      var _this$dragStartSource, _this$dragOverTargetI;\n\n      return {\n        sourcePreviewNodes: this.sourcePreviewNodes.size,\n        sourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n        sourceNodeOptions: this.sourceNodeOptions.size,\n        sourceNodes: this.sourceNodes.size,\n        dragStartSourceIds: ((_this$dragStartSource = this.dragStartSourceIds) === null || _this$dragStartSource === void 0 ? void 0 : _this$dragStartSource.length) || 0,\n        dropTargetIds: this.dropTargetIds.length,\n        dragEnterTargetIds: this.dragEnterTargetIds.length,\n        dragOverTargetIds: ((_this$dragOverTargetI = this.dragOverTargetIds) === null || _this$dragOverTargetI === void 0 ? void 0 : _this$dragOverTargetI.length) || 0\n      };\n    } // public for test\n\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.options.window;\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.options.document;\n    }\n    /**\n     * Get the root element to use for event subscriptions\n     */\n\n  }, {\n    key: \"rootElement\",\n    get: function get() {\n      return this.options.rootElement;\n    }\n  }, {\n    key: \"setup\",\n    value: function setup() {\n      var root = this.rootElement;\n\n      if (root === undefined) {\n        return;\n      }\n\n      if (root.__isReactDndBackendSetUp) {\n        throw new Error('Cannot have two HTML5 backends at the same time.');\n      }\n\n      root.__isReactDndBackendSetUp = true;\n      this.addEventListeners(root);\n    }\n  }, {\n    key: \"teardown\",\n    value: function teardown() {\n      var root = this.rootElement;\n\n      if (root === undefined) {\n        return;\n      }\n\n      root.__isReactDndBackendSetUp = false;\n      this.removeEventListeners(this.rootElement);\n      this.clearCurrentDragSourceNode();\n\n      if (this.asyncEndDragFrameId) {\n        var _this$window;\n\n        (_this$window = this.window) === null || _this$window === void 0 ? void 0 : _this$window.cancelAnimationFrame(this.asyncEndDragFrameId);\n      }\n    }\n  }, {\n    key: \"connectDragPreview\",\n    value: function connectDragPreview(sourceId, node, options) {\n      var _this2 = this;\n\n      this.sourcePreviewNodeOptions.set(sourceId, options);\n      this.sourcePreviewNodes.set(sourceId, node);\n      return function () {\n        _this2.sourcePreviewNodes.delete(sourceId);\n\n        _this2.sourcePreviewNodeOptions.delete(sourceId);\n      };\n    }\n  }, {\n    key: \"connectDragSource\",\n    value: function connectDragSource(sourceId, node, options) {\n      var _this3 = this;\n\n      this.sourceNodes.set(sourceId, node);\n      this.sourceNodeOptions.set(sourceId, options);\n\n      var handleDragStart = function handleDragStart(e) {\n        return _this3.handleDragStart(e, sourceId);\n      };\n\n      var handleSelectStart = function handleSelectStart(e) {\n        return _this3.handleSelectStart(e);\n      };\n\n      node.setAttribute('draggable', 'true');\n      node.addEventListener('dragstart', handleDragStart);\n      node.addEventListener('selectstart', handleSelectStart);\n      return function () {\n        _this3.sourceNodes.delete(sourceId);\n\n        _this3.sourceNodeOptions.delete(sourceId);\n\n        node.removeEventListener('dragstart', handleDragStart);\n        node.removeEventListener('selectstart', handleSelectStart);\n        node.setAttribute('draggable', 'false');\n      };\n    }\n  }, {\n    key: \"connectDropTarget\",\n    value: function connectDropTarget(targetId, node) {\n      var _this4 = this;\n\n      var handleDragEnter = function handleDragEnter(e) {\n        return _this4.handleDragEnter(e, targetId);\n      };\n\n      var handleDragOver = function handleDragOver(e) {\n        return _this4.handleDragOver(e, targetId);\n      };\n\n      var handleDrop = function handleDrop(e) {\n        return _this4.handleDrop(e, targetId);\n      };\n\n      node.addEventListener('dragenter', handleDragEnter);\n      node.addEventListener('dragover', handleDragOver);\n      node.addEventListener('drop', handleDrop);\n      return function () {\n        node.removeEventListener('dragenter', handleDragEnter);\n        node.removeEventListener('dragover', handleDragOver);\n        node.removeEventListener('drop', handleDrop);\n      };\n    }\n  }, {\n    key: \"addEventListeners\",\n    value: function addEventListeners(target) {\n      // SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n      if (!target.addEventListener) {\n        return;\n      }\n\n      target.addEventListener('dragstart', this.handleTopDragStart);\n      target.addEventListener('dragstart', this.handleTopDragStartCapture, true);\n      target.addEventListener('dragend', this.handleTopDragEndCapture, true);\n      target.addEventListener('dragenter', this.handleTopDragEnter);\n      target.addEventListener('dragenter', this.handleTopDragEnterCapture, true);\n      target.addEventListener('dragleave', this.handleTopDragLeaveCapture, true);\n      target.addEventListener('dragover', this.handleTopDragOver);\n      target.addEventListener('dragover', this.handleTopDragOverCapture, true);\n      target.addEventListener('drop', this.handleTopDrop);\n      target.addEventListener('drop', this.handleTopDropCapture, true);\n    }\n  }, {\n    key: \"removeEventListeners\",\n    value: function removeEventListeners(target) {\n      // SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n      if (!target.removeEventListener) {\n        return;\n      }\n\n      target.removeEventListener('dragstart', this.handleTopDragStart);\n      target.removeEventListener('dragstart', this.handleTopDragStartCapture, true);\n      target.removeEventListener('dragend', this.handleTopDragEndCapture, true);\n      target.removeEventListener('dragenter', this.handleTopDragEnter);\n      target.removeEventListener('dragenter', this.handleTopDragEnterCapture, true);\n      target.removeEventListener('dragleave', this.handleTopDragLeaveCapture, true);\n      target.removeEventListener('dragover', this.handleTopDragOver);\n      target.removeEventListener('dragover', this.handleTopDragOverCapture, true);\n      target.removeEventListener('drop', this.handleTopDrop);\n      target.removeEventListener('drop', this.handleTopDropCapture, true);\n    }\n  }, {\n    key: \"getCurrentSourceNodeOptions\",\n    value: function getCurrentSourceNodeOptions() {\n      var sourceId = this.monitor.getSourceId();\n      var sourceNodeOptions = this.sourceNodeOptions.get(sourceId);\n      return _objectSpread({\n        dropEffect: this.altKeyPressed ? 'copy' : 'move'\n      }, sourceNodeOptions || {});\n    }\n  }, {\n    key: \"getCurrentDropEffect\",\n    value: function getCurrentDropEffect() {\n      if (this.isDraggingNativeItem()) {\n        // It makes more sense to default to 'copy' for native resources\n        return 'copy';\n      }\n\n      return this.getCurrentSourceNodeOptions().dropEffect;\n    }\n  }, {\n    key: \"getCurrentSourcePreviewNodeOptions\",\n    value: function getCurrentSourcePreviewNodeOptions() {\n      var sourceId = this.monitor.getSourceId();\n      var sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId);\n      return _objectSpread({\n        anchorX: 0.5,\n        anchorY: 0.5,\n        captureDraggingState: false\n      }, sourcePreviewNodeOptions || {});\n    }\n  }, {\n    key: \"isDraggingNativeItem\",\n    value: function isDraggingNativeItem() {\n      var itemType = this.monitor.getItemType();\n      return Object.keys(NativeTypes).some(function (key) {\n        return NativeTypes[key] === itemType;\n      });\n    }\n  }, {\n    key: \"beginDragNativeItem\",\n    value: function beginDragNativeItem(type, dataTransfer) {\n      this.clearCurrentDragSourceNode();\n      this.currentNativeSource = createNativeDragSource(type, dataTransfer);\n      this.currentNativeHandle = this.registry.addSource(type, this.currentNativeSource);\n      this.actions.beginDrag([this.currentNativeHandle]);\n    }\n  }, {\n    key: \"setCurrentDragSourceNode\",\n    value: function setCurrentDragSourceNode(node) {\n      var _this5 = this;\n\n      this.clearCurrentDragSourceNode();\n      this.currentDragSourceNode = node; // A timeout of > 0 is necessary to resolve Firefox issue referenced\n      // See:\n      //   * https://github.com/react-dnd/react-dnd/pull/928\n      //   * https://github.com/react-dnd/react-dnd/issues/869\n\n      var MOUSE_MOVE_TIMEOUT = 1000; // Receiving a mouse event in the middle of a dragging operation\n      // means it has ended and the drag source node disappeared from DOM,\n      // so the browser didn't dispatch the dragend event.\n      //\n      // We need to wait before we start listening for mousemove events.\n      // This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n      // immediately in some browsers.\n      //\n      // See:\n      //   * https://github.com/react-dnd/react-dnd/pull/928\n      //   * https://github.com/react-dnd/react-dnd/issues/869\n      //\n\n      this.mouseMoveTimeoutTimer = setTimeout(function () {\n        var _this5$rootElement;\n\n        return (_this5$rootElement = _this5.rootElement) === null || _this5$rootElement === void 0 ? void 0 : _this5$rootElement.addEventListener('mousemove', _this5.endDragIfSourceWasRemovedFromDOM, true);\n      }, MOUSE_MOVE_TIMEOUT);\n    }\n  }, {\n    key: \"clearCurrentDragSourceNode\",\n    value: function clearCurrentDragSourceNode() {\n      if (this.currentDragSourceNode) {\n        this.currentDragSourceNode = null;\n\n        if (this.rootElement) {\n          var _this$window2;\n\n          (_this$window2 = this.window) === null || _this$window2 === void 0 ? void 0 : _this$window2.clearTimeout(this.mouseMoveTimeoutTimer || undefined);\n          this.rootElement.removeEventListener('mousemove', this.endDragIfSourceWasRemovedFromDOM, true);\n        }\n\n        this.mouseMoveTimeoutTimer = null;\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"handleDragStart\",\n    value: function handleDragStart(e, sourceId) {\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      if (!this.dragStartSourceIds) {\n        this.dragStartSourceIds = [];\n      }\n\n      this.dragStartSourceIds.unshift(sourceId);\n    }\n  }, {\n    key: \"handleDragEnter\",\n    value: function handleDragEnter(e, targetId) {\n      this.dragEnterTargetIds.unshift(targetId);\n    }\n  }, {\n    key: \"handleDragOver\",\n    value: function handleDragOver(e, targetId) {\n      if (this.dragOverTargetIds === null) {\n        this.dragOverTargetIds = [];\n      }\n\n      this.dragOverTargetIds.unshift(targetId);\n    }\n  }, {\n    key: \"handleDrop\",\n    value: function handleDrop(e, targetId) {\n      this.dropTargetIds.unshift(targetId);\n    }\n  }]);\n\n  return HTML5BackendImpl;\n}();"]},"metadata":{},"sourceType":"module"}