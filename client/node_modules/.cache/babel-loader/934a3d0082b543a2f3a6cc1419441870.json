{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\OneDrive\\\\Desktop\\\\GW_Coding_BootCamp\\\\Sprinter-React\\\\src\\\\components\\\\Dashboard\\\\DashTable\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DashBoardTable() {\n  _s();\n\n  const [Results, setResults] = useState([]);\n  const [employee, setemployee] = useState(initialState);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/projects\").then(data => {\n      console.log(data.data);\n      setResults(data.data);\n    });\n  }, []);\n\n  const newDate = date => {\n    let x = new Date(date);\n    return x.toLocaleDateString();\n  };\n\n  const getEmployee = () => {\n    axios.get(\"http://localhost:5000/employee\").then(data => {\n      console.log(data.data);\n      setemployee(data.data);\n    });\n  };\n\n  console.log(getEmployee());\n\n  var ID = function () {\n    // Math.random should be unique because of its seeding algorithm.\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n    // after the decimal.\n    return '_' + Math.random().toString(36).substr(2, 4);\n  };\n\n  console.log(ID());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Timeline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Results.map((projects, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: ID()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: projects.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: projects.employee[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: newDate(projects.startDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n}\n\n_s(DashBoardTable, \"3Wv6CrrKYXM8kAqNEA65ImOct9Y=\");\n\n_c = DashBoardTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashBoardTable\");","map":{"version":3,"sources":["C:/Users/alexa/OneDrive/Desktop/GW_Coding_BootCamp/Sprinter-React/src/components/Dashboard/DashTable/Table.js"],"names":["React","useEffect","useState","Table","axios","DashBoardTable","Results","setResults","employee","setemployee","initialState","get","then","data","console","log","newDate","date","x","Date","toLocaleDateString","getEmployee","ID","Math","random","toString","substr","map","projects","index","description","startDate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACxC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACG,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAACQ,YAAD,CAAxC;AACHT,EAAAA,SAAS,CAAC,MAAM;AACfG,IAAAA,KAAK,CAACO,GAAN,CAAU,gCAAV,EAA4CC,IAA5C,CAAkDC,IAAD,IAAU;AAC1DC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAjB;AACAN,MAAAA,UAAU,CAACM,IAAI,CAACA,IAAN,CAAV;AACA,KAHD;AAIA,GALQ,EAKN,EALM,CAAT;;AAOG,QAAMG,OAAO,GAAIC,IAAD,IAAU;AAC5B,QAAIC,CAAC,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAR;AAEA,WAAOC,CAAC,CAACE,kBAAF,EAAP;AACA,GAJE;;AAMA,QAAMC,WAAW,GAAG,MAAK;AACrBjB,IAAAA,KAAK,CAACO,GAAN,CAAU,gCAAV,EAA4CC,IAA5C,CAAkDC,IAAD,IAAU;AAChEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAjB;AACAJ,MAAAA,WAAW,CAACI,IAAI,CAACA,IAAN,CAAX;AACA,KAHK;AAIH,GALD;;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYM,WAAW,EAAvB;;AAEA,MAAIC,EAAE,GAAG,YAAY;AACjB;AACA;AACA;AACA,WAAO,MAAMC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CAAb;AACD,GALH;;AAMEZ,EAAAA,OAAO,CAACC,GAAR,CAAYO,EAAE,EAAd;AAEL,sBACC;AAAA,2BACC,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA,8BACC;AAAA,+BACC;AAAA,kCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAUE;AAAA,kBACgBhB,OAAO,CAACqB,GAAR,CAAY,CAACC,QAAD,EAAWC,KAAX,kBAC3B;AAAA,kCACC;AAAA,sBAAKP,EAAE;AAAP;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAA,sBAAKM,QAAQ,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFD,eAGC;AAAA,sBAAKF,QAAQ,CAACpB,QAAT,CAAkB,CAAlB;AAAL;AAAA;AAAA;AAAA;AAAA,kBAHD,eAIC;AAAA,sBAAKQ,OAAO,CAACY,QAAQ,CAACG,SAAV;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADe;AADhB;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AA0BA;;GA1DuB1B,c;;KAAAA,c","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default function DashBoardTable() {\r\n\tconst [Results, setResults] = useState([]);\r\n    const [employee, setemployee] = useState(initialState)\r\n\tuseEffect(() => {\r\n\t\taxios.get(\"http://localhost:5000/projects\").then((data) => {\r\n\t\t\tconsole.log(data.data);\r\n\t\t\tsetResults(data.data);\r\n\t\t});\r\n\t}, []);\r\n\r\n    const newDate = (date) => {\r\n\t\tlet x = new Date(date);\r\n\r\n\t\treturn x.toLocaleDateString();\r\n\t};\r\n\r\n    const getEmployee = () =>{\r\n        axios.get(\"http://localhost:5000/employee\").then((data) => {\r\n\t\t\tconsole.log(data.data);\r\n\t\t\tsetemployee(data.data)\r\n\t\t});\r\n    }\r\n    console.log(getEmployee());\r\n\r\n    var ID = function () {\r\n        // Math.random should be unique because of its seeding algorithm.\r\n        // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n        // after the decimal.\r\n        return '_' + Math.random().toString(36).substr(2, 4);\r\n      };\r\n      console.log(ID());\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Table striped bordered hover>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>ID</th>\r\n\t\t\t\t\t\t<th>Summary</th>\r\n\t\t\t\t\t\t<th>Employees</th>\r\n\t\t\t\t\t\t<th>Timeline</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t\r\n\t\t\t\t\t<tbody>\r\n                    {Results.map((projects, index) => (\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>{ID()}</td>\r\n\t\t\t\t\t\t\t<td>{projects.description}</td>\r\n\t\t\t\t\t\t\t<td>{projects.employee[0]}</td>\r\n\t\t\t\t\t\t\t<td>{newDate(projects.startDate)}</td>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</tr>\r\n                    ))}\r\n\t\t\t\t\t</tbody>;\r\n\t\t\t\t\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}