{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\OneDrive\\\\Desktop\\\\GW_Coding_BootCamp\\\\Sprinter-React\\\\src\\\\components\\\\Forms\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col, InputGroup, Row } from \"react-bootstrap\";\nimport \"../../App.css\";\nimport axios from \"axios\";\nimport Employee from \"../Employees/Employee\";\nimport { RiContactsBookUploadLine } from \"react-icons/ri\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  first: \"\",\n  last: \"\",\n  roleId: \"\"\n};\nexport default function Forms() {\n  _s();\n\n  // const [EmployeeData, setEmpData] = useState({\n  // \tfirst: \"\",\n  // \tlast: \"\",\n  // \ttitle:\"\"\n  // })\n  const [values, setValues] = useState(initialValues); // const[first, setFirst] = useState(\"\")\n  // const[last, setLast] = useState()\n  // const[title, setTitle] = useState()\n\n  const [validated, setValidated] = useState(false); // const handleSubmit = (e) => {\n  // \tconst form = e.currentTarget;\n  // \tif (form.checkValidity() === false) {\n  // \t\te.preventDefault();\n  // \t\te.stopPropagation();\n  // \t}\n  // \tsetValidated(true);\n  // \taxios.post(\"http://localhost:5000/employee\",{\n  // \t\tfirst:EmployeeData.first,\n  // \t\tlast:EmployeeData.last,\n  // \t\ttitle:EmployeeData.title\n  // \t})\n  // \t.then(res=>{\n  // \t\tconsole.log(res.EmployeeData)\n  // \t})\n  // };\n\n  const handle = e => {\n    // const first = e.target.value\n    // const last = e.target.value\n    // const title = e.target.value\n    // console.log(e.target.value)\n    // setEmpData({\n    // \tfirst: e.target.first,\n    // \tlast: e.target.last,\n    // \ttitle: e.target.title\n    // })\n    // console.log(EmployeeData)\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    }); // setFirst(first)\n    // setLast(last)\n    // setTitle(title)\n    // var newEmpData = {...EmployeeData};\n    // EmployeeData[title] = e.target.value;\n    // setEmpData(newEmpData);\n    // console.log(EmploreeData)\n  };\n\n  const submit = e => {\n    e.preventDefault(); // console.log(e.target.value)\n    // console.log(EmployeeData)\n\n    axios.post(\"http://localhost:5000/employee\", {\n      first_name: values.first,\n      last_name: values.last,\n      roleId: values.id\n    }).then(res => {\n      console.log(res);\n    }).catch(err => console.log(err));\n    console.log(values);\n  };\n\n  const [roles, setRoles] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/roles\").then(res => {\n      console.log(res.data);\n      setRoles(res.data);\n    });\n  }, []); // const getRoleList = () => {\n  // \tgetRoles()\n  // \t  .then(res => {\n  // \t\tsetRoles(res.data)\n  // \t\tconsole.log(res.data)\n  // \t  })\n  // \t  .catch(err => console.log(err));\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(Col, {\n    className: \"mx-auto addemp-form\",\n    md: 12,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Employees\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          id: \"first\",\n          name: \"first\",\n          placeholder: \"First Name\",\n          onChange: handle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          id: \"last\",\n          name: \"last\",\n          placeholder: \"Last Name\",\n          onChange: handle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Select Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          as: \"select\",\n          onChange: handle,\n          name: \"id\",\n          children: roles.map(role => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: role.title\n            }, role.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 8\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Forms, \"BHciRMG5+mS9guOfCYDu5XBxxyE=\");\n\n_c = Forms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forms\");","map":{"version":3,"sources":["C:/Users/alexa/OneDrive/Desktop/GW_Coding_BootCamp/Sprinter-React/src/components/Forms/Form.js"],"names":["React","useState","useEffect","Form","Button","Col","InputGroup","Row","axios","Employee","RiContactsBookUploadLine","initialValues","first","last","roleId","Forms","values","setValues","validated","setValidated","handle","e","name","value","target","submit","preventDefault","post","first_name","last_name","id","then","res","console","log","catch","err","roles","setRoles","get","data","map","role","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\r\nimport { Form, Button, Col, InputGroup, Row } from \"react-bootstrap\";\r\nimport \"../../App.css\";\r\nimport axios from \"axios\";\r\nimport Employee from \"../Employees/Employee\";\r\nimport { RiContactsBookUploadLine } from \"react-icons/ri\";\r\n\r\nconst initialValues = {\r\n\tfirst: \"\",\r\n\tlast: \"\",\r\n\troleId: \"\",\r\n  };\r\nexport default function Forms() {\r\n\r\n\t// const [EmployeeData, setEmpData] = useState({\r\n\t// \tfirst: \"\",\r\n\t// \tlast: \"\",\r\n\t// \ttitle:\"\"\r\n\t// })\r\n\r\n\tconst [values, setValues] = useState(initialValues);\r\n\r\n\t// const[first, setFirst] = useState(\"\")\r\n\t// const[last, setLast] = useState()\r\n\t// const[title, setTitle] = useState()\r\n\t\r\n\tconst [validated, setValidated] = useState(false);\r\n\r\n\t// const handleSubmit = (e) => {\r\n\t// \tconst form = e.currentTarget;\r\n\t// \tif (form.checkValidity() === false) {\r\n\t// \t\te.preventDefault();\r\n\t// \t\te.stopPropagation();\r\n\t// \t}\r\n\r\n\t// \tsetValidated(true);\r\n\t// \taxios.post(\"http://localhost:5000/employee\",{\r\n\t// \t\tfirst:EmployeeData.first,\r\n\t// \t\tlast:EmployeeData.last,\r\n\t// \t\ttitle:EmployeeData.title\r\n\t// \t})\r\n\t// \t.then(res=>{\r\n\t// \t\tconsole.log(res.EmployeeData)\r\n\t// \t})\r\n\r\n\t// };\r\n\r\n\tconst handle=(e) => {\r\n\t\t\r\n\t\t\r\n\t\t// const first = e.target.value\r\n\t\t// const last = e.target.value\r\n\t\t// const title = e.target.value\r\n\t\t// console.log(e.target.value)\r\n\t\t// setEmpData({\r\n\t\t// \tfirst: e.target.first,\r\n\t\t// \tlast: e.target.last,\r\n\t\t// \ttitle: e.target.title\r\n\t\t// })\r\n\r\n\t\t// console.log(EmployeeData)\r\n\t\tconst { name, value } = e.target;\r\n\t\tsetValues({\r\n\t\t  ...values,\r\n\t\t  [name]: value,\r\n\t\t});\r\n\r\n\r\n\t\t\r\n\r\n\t\t// setFirst(first)\r\n\t\t// setLast(last)\r\n\t\t// setTitle(title)\r\n\t\t// var newEmpData = {...EmployeeData};\r\n\t\t// EmployeeData[title] = e.target.value;\r\n\t\t// setEmpData(newEmpData);\r\n\t\t// console.log(EmploreeData)\r\n\t\r\n\t}\r\n\tconst submit=(e) => {\r\n\t\te.preventDefault();\r\n\t\r\n\t\t// console.log(e.target.value)\r\n\t\t// console.log(EmployeeData)\r\n\t\taxios.post(\"http://localhost:5000/employee\",{\r\n\t\t\tfirst_name:values.first,\r\n\t\t\tlast_name:values.last,\r\n\t\t\troleId:values.id\r\n\t\t})\r\n\t\t.then(res=>{\r\n\t\t\tconsole.log(res)\r\n\t\t})\r\n\t\t.catch(err=>console.log(err))\r\n\t\tconsole.log(values)\r\n\r\n\t}\r\n\t\r\n\tconst [roles, setRoles] = useState([]);\r\n\t\r\n\t  useEffect(() => {\r\n\t\taxios.get(\"http://localhost:5000/roles\")\r\n\t\t.then((res => {\r\n\t\t\tconsole.log(res.data)\r\n\t\t\tsetRoles(res.data)\r\n\t\t})) \r\n\t  }, [])\r\n\t// const getRoleList = () => {\r\n\t// \tgetRoles()\r\n\t// \t  .then(res => {\r\n\t// \t\tsetRoles(res.data)\r\n\t// \t\tconsole.log(res.data)\r\n\t// \t  })\r\n\t// \t  .catch(err => console.log(err));\r\n\t//   };\r\n\r\n\treturn (\r\n\t\t<Col className=\"mx-auto addemp-form\" md={12}>\r\n\t\t<h3>Add Employees</h3>\r\n\t\t<Form noValidate validated={validated} onSubmit={submit}>\r\n\t\t\t<Form.Group>\r\n\t\t\t\t<Form.Label>First Name</Form.Label>\r\n\t\t\t\t<Form.Control required type=\"text\" id = \"first\" name=\"first\" placeholder=\"First Name\"  onChange={handle}/>\r\n\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t</Form.Text>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group >\r\n\t\t\t\t<Form.Label>Last Name</Form.Label>\r\n\t\t\t\t<Form.Control required type=\"text\" id = \"last\" name=\"last\" placeholder=\"Last Name\" onChange={handle}  />\r\n\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t</Form.Text>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Form.Group>\r\n\t\t\t\t<Form.Label>Select Title</Form.Label>\r\n\t\t\t\t<Form.Control required as=\"select\"onChange={handle} name=\"id\">\r\n\t\t\t\t\t{roles.map((role) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<option  key={role.id}>{role.title}</option>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Form.Control>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Button variant=\"primary\" type=\"submit\">\r\n\t\t\t\tSubmit</Button>\r\n\t\t</Form>\r\n\t\t</Col>\r\n\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}