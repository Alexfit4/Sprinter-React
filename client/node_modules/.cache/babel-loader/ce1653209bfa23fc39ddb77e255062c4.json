{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\OneDrive\\\\Desktop\\\\GW_Coding_BootCamp\\\\Sprinter-React\\\\client\\\\src\\\\components\\\\Forms\\\\FormSprints.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport { Form, Button, Col, Container, h1, InputGroup, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SprintsForms extends Component {\n  constructor(props) {\n    super(props);\n    this.employees = ['Employee 1', 'Employee 2', \"Employee 3\", \"Employee 4\"];\n    this.managers = ['manager 1', 'manager 2', \"manager 3\", \"manager 4\"];\n    this.status = ['open', 'in progress', \"in review\", \"done\"];\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeStartDate = this.onChangeStartDate.bind(this);\n    this.onChangeManager = this.onChangeManager.bind(this);\n    this.onChangeEmployee = this.onChangeEmployee.bind(this);\n    this.onChangeStatus = this.onChangeStatus.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      title: '',\n      description: '',\n      startDate: new Date(),\n      manager: [],\n      employee: [],\n      status: ''\n    };\n  } // const[validated, setValidated] = useState(false);\n  // const handleSubmit = (event) => {\n  //     const form = event.currentTarget;\n  //     if (form.checkValidity() === false) {\n  //         event.preventDefault();\n  //         event.stopPropagation();\n  //     }\n  //     setValidated(true);\n  // };\n\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/projects').then(response => {\n      if (response.data.length > 0) {\n        this.setState({\n          users: response.data.map(user => user.username),\n          username: response.data[0].username\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  onChangeStartDate(date) {\n    this.setState({\n      startDate: date\n    });\n  }\n\n  onChangeManager(e) {\n    this.setState({\n      manager: e.target.value\n    });\n  }\n\n  onChangeEmployee(e) {\n    this.setState({\n      employee: e.target.value\n    });\n  }\n\n  onChangeStatus(e) {\n    this.setState({\n      status: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const project = {\n      title: this.state.title,\n      description: this.state.description,\n      manager: this.state.manager,\n      employee: this.state.employee,\n      startDate: this.state.startDate,\n      status: this.state.status\n    };\n    console.log(project);\n    axios.post('http://localhost:5000/projects', project).then(res => this.props.getSprints());\n    window.location = '/sprints';\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: \"4\",\n        className: \"mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sprint Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"exampleForm.ControlInput1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Sprints Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"sprints\",\n              placeholder: \"Sprints Name\",\n              className: \"form-control\",\n              value: this.state.title,\n              onChange: this.onChangeTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"exampleForm.ControlInput2\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Sprints Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"details\",\n              placeholder: \"Sprints Details\",\n              className: \"form-control\",\n              value: this.state.description,\n              onChange: this.onChangeDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"exampleForm.ControlSelect1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              custom: true,\n              className: \"form-control\",\n              value: this.state.manager,\n              onChange: this.onChangeManager,\n              children: this.managers.map(options => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: options\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"exampleForm.ControlSelect2\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              multiple: true,\n              className: \"form-control\",\n              value: this.state.employee,\n              onChange: this.onChangeEmployee,\n              children: this.employees.map(options => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: options\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"exampleForm.ControlSelect3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              custom: true,\n              defaultValue: \"Open\",\n              className: \"form-control\",\n              value: this.state.status,\n              onChange: this.onChangeStatus,\n              children: this.status.map(options => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: options\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Submit form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/alexa/OneDrive/Desktop/GW_Coding_BootCamp/Sprinter-React/client/src/components/Forms/FormSprints.js"],"names":["React","useState","useEffect","Component","Form","Button","Col","Container","h1","InputGroup","Row","axios","SprintsForms","constructor","props","employees","managers","status","onChangeTitle","bind","onChangeDescription","onChangeStartDate","onChangeManager","onChangeEmployee","onChangeStatus","onSubmit","state","title","description","startDate","Date","manager","employee","componentDidMount","get","then","response","data","length","setState","users","map","user","username","catch","error","console","log","e","target","value","date","preventDefault","project","post","res","getSprints","window","location","render","options"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\r\nimport { Form, Button, Col, Container, h1, InputGroup, Row } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nexport default class SprintsForms extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\r\n        this.onChangeManager = this.onChangeManager.bind(this);\r\n        this.onChangeEmployee = this.onChangeEmployee.bind(this);\r\n        this.onChangeStatus = this.onChangeStatus.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            title: '',\r\n            description: '',\r\n            startDate: new Date(),\r\n            manager: [],\r\n            employee: [],\r\n            status: '',\r\n        }\r\n    }\r\n\r\n    // const[validated, setValidated] = useState(false);\r\n\r\n    // const handleSubmit = (event) => {\r\n    //     const form = event.currentTarget;\r\n    //     if (form.checkValidity() === false) {\r\n    //         event.preventDefault();\r\n    //         event.stopPropagation();\r\n    //     }\r\n\r\n    //     setValidated(true);\r\n    // };\r\n\r\n\r\n    employees = ['Employee 1', 'Employee 2', \"Employee 3\", \"Employee 4\"]\r\n    managers = ['manager 1', 'manager 2', \"manager 3\", \"manager 4\"]\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/projects')\r\n            .then(response => {\r\n                if (response.data.length > 0) {\r\n                    this.setState({\r\n                        users: response.data.map(user => user.username),\r\n                        username: response.data[0].username\r\n                    })\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n\r\n\r\n    status = ['open', 'in progress', \"in review\", \"done\"]\r\n\r\n    onChangeTitle(e) {\r\n        this.setState({\r\n            title: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDescription(e) {\r\n        this.setState({\r\n            description: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeStartDate(date) {\r\n        this.setState({\r\n            startDate: date\r\n        })\r\n    }\r\n\r\n    onChangeManager(e) {\r\n        this.setState({\r\n            manager: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeEmployee(e) {\r\n        this.setState({\r\n            employee: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeStatus(e) {\r\n        this.setState({\r\n            status: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const project = {\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            manager: this.state.manager,\r\n            employee: this.state.employee,\r\n            startDate: this.state.startDate,\r\n            status: this.state.status\r\n        }\r\n\r\n        console.log(project);\r\n\r\n        axios.post('http://localhost:5000/projects', project)\r\n            .then(res => this.props.getSprints());\r\n\r\n        window.location = '/sprints';\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Col md=\"4\" className=\"mx-auto\">\r\n                    <h1>Sprint Form</h1>\r\n                    <Form onSubmit={this.onSubmit}  >\r\n\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Sprints Name</Form.Label>\r\n                            <Form.Control type=\"sprints\" placeholder=\"Sprints Name\" className=\"form-control\"\r\n                                value={this.state.title}\r\n                                onChange={this.onChangeTitle} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                            <Form.Label>Sprints Details</Form.Label>\r\n                            <Form.Control type=\"details\" placeholder=\"Sprints Details\"\r\n                                className=\"form-control\"\r\n                                value={this.state.description}\r\n                                onChange={this.onChangeDescription} />\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Label>Manager</Form.Label>\r\n                            <Form.Control as=\"select\" custom className=\"form-control\"\r\n                                value={this.state.manager}\r\n                                onChange={this.onChangeManager}>\r\n                                {this.managers.map((options) => {\r\n                                    return (\r\n                                        <option>{options}</option>\r\n                                    )\r\n                                })}\r\n                            </Form.Control>\r\n\r\n\r\n\r\n\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                            <Form.Label>Employee</Form.Label>\r\n                            <Form.Control as=\"select\" multiple className=\"form-control\"\r\n                                value={this.state.employee}\r\n                                onChange={this.onChangeEmployee}>\r\n                                {this.employees.map((options) => {\r\n                                    return (\r\n                                        <option>{options}</option>\r\n                                    )\r\n                                })}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect3\">\r\n                            <Form.Label>Status</Form.Label>\r\n                            <Form.Control as=\"select\" custom defaultValue=\"Open\" className=\"form-control\"\r\n                                value={this.state.status}\r\n                                onChange={this.onChangeStatus}>\r\n                                {this.status.map((options) => {\r\n                                    return (\r\n                                        <option>{options}</option>\r\n                                    )\r\n                                })}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Button type=\"submit\">Submit form</Button>\r\n                    </Form>\r\n                </Col>\r\n            </Container >\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}