{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\OneDrive\\\\Desktop\\\\GW_Coding_BootCamp\\\\Sprinter-React\\\\src\\\\components\\\\Sprints\\\\Sprints.js\",\n    _s = $RefreshSig$();\n\nimport SprintsForms from '../Forms/FormSprints';\nimport React, { useState } from \"react\";\nimport Item from \"../Item/Item\";\nimport DropWrapper from \"../DropWrapper/DropWrapper\";\nimport SprintsCol from \"../Col/SprintsCol\";\nimport { data, statuses } from \"../../data/index\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sprints = () => {\n  _s();\n\n  const [items, setItems] = useState(data);\n\n  const onDrop = (item, monitor, status) => {\n    const mapping = statuses.find(si => si.status === status);\n    setItems(prevState => {\n      const newItems = prevState.filter(i => i.id !== item.id).concat({ ...item,\n        status,\n        icon: mapping.icon\n      });\n      return [...newItems];\n    });\n  };\n\n  const moveItem = (dragIndex, hoverIndex) => {\n    const item = items[dragIndex];\n    setItems(prevState => {\n      const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n      newItems.splice(hoverIndex, 0, item);\n      return [...newItems];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sprints\",\n    children: [/*#__PURE__*/_jsxDEV(SprintsForms, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: statuses.map(s => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"col-header\",\n            children: s.status.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DropWrapper, {\n            onDrop: onDrop,\n            status: s.status,\n            children: /*#__PURE__*/_jsxDEV(SprintsCol, {\n              children: items.filter(i => i.status === s.status).map((i, idx) => /*#__PURE__*/_jsxDEV(Item, {\n                item: i,\n                index: idx,\n                moveItem: moveItem,\n                status: s\n              }, i.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 58\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)]\n        }, s.status, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sprints, \"Uq/YoZ43CBi40+7C5uYosmevsXU=\");\n\n_c = Sprints;\nexport default Sprints;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sprints\");","map":{"version":3,"sources":["C:/Users/alexa/OneDrive/Desktop/GW_Coding_BootCamp/Sprinter-React/src/components/Sprints/Sprints.js"],"names":["SprintsForms","React","useState","Item","DropWrapper","SprintsCol","data","statuses","Sprints","items","setItems","onDrop","item","monitor","status","mapping","find","si","prevState","newItems","filter","i","id","concat","icon","moveItem","dragIndex","hoverIndex","idx","splice","map","s","toUpperCase"],"mappings":"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","sourcesContent":["\r\nimport SprintsForms from '../Forms/FormSprints'\r\nimport React, { useState } from \"react\";\r\nimport Item from \"../Item/Item\";\r\nimport DropWrapper from \"../DropWrapper/DropWrapper\";\r\nimport SprintsCol from \"../Col/SprintsCol\";\r\nimport { data, statuses } from \"../../data/index\";\r\nimport \"./index.css\";\r\nconst Sprints = () => {\r\n\r\n    const [items, setItems] = useState(data);\r\n\r\n    const onDrop = (item, monitor, status) => {\r\n        const mapping = statuses.find(si => si.status === status);\r\n\r\n        setItems(prevState => {\r\n            const newItems = prevState\r\n                .filter(i => i.id !== item.id)\r\n                .concat({ ...item, status, icon: mapping.icon });\r\n            return [...newItems];\r\n        });\r\n    };\r\n\r\n    const moveItem = (dragIndex, hoverIndex) => {\r\n        const item = items[dragIndex];\r\n        setItems(prevState => {\r\n            const newItems = prevState.filter((i, idx) => idx !== dragIndex);\r\n            newItems.splice(hoverIndex, 0, item);\r\n            return [...newItems];\r\n        });\r\n    };\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='sprints'>\r\n            <SprintsForms />\r\n            <div className={\"row\"}>\r\n                {statuses.map(s => {\r\n                    return (\r\n                        <div key={s.status} className={\"col-wrapper\"}>\r\n                            <h2 className={\"col-header\"}>{s.status.toUpperCase()}</h2>\r\n                            <DropWrapper onDrop={onDrop} status={s.status}>\r\n                                <SprintsCol>\r\n                                    {items\r\n                                        .filter(i => i.status === s.status)\r\n                                        .map((i, idx) => <Item key={i.id} item={i} index={idx} moveItem={moveItem} status={s} />)\r\n                                    }\r\n                                </SprintsCol>\r\n                            </DropWrapper>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Sprints;"]},"metadata":{},"sourceType":"module"}